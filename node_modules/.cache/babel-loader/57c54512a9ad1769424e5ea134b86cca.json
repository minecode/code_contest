{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/Challenge/index.tsx\";\nimport React from 'react';\nimport { Container, Grid, LoginInfo, Message } from './styles';\nimport { Col, Row } from 'react-bootstrap';\nimport ChallengeInfo from '../ChallengeInfo';\nimport ContestList from '../ContestList';\nimport Drop from '../Drop';\nimport { useSelector } from 'react-redux';\n\nconst Challenge = () => {\n  const data = useSelector(state => state.data);\n  const authentication = data.auth.authenticated;\n  const dataChallenge = data.challenge;\n  const challengeName = dataChallenge.name;\n\n  const login = response => {\n    const newAuth = {\n      data: {\n        auth: {\n          authenticated: true,\n          user: {\n            id: response.googleId,\n            name: response.profileObj.givenName,\n            surname: response.profileObj.familyName,\n            image: response.profileObj.imageUrl\n          },\n          token: response.tokenId\n        },\n        challenge: dataChallenge\n      }\n    };\n    dispatch({\n      type: 'LOGIN',\n      data: newAuth\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ContestList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), challengeName ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ChallengeInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), authentication ? /*#__PURE__*/React.createElement(Drop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(LoginInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"You need to log in to send your solution!\"))))) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n};\n\nexport default Challenge;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/Challenge/index.tsx"],"names":["React","Container","Grid","LoginInfo","Message","Col","Row","ChallengeInfo","ContestList","Drop","useSelector","Challenge","data","state","authentication","auth","authenticated","dataChallenge","challenge","challengeName","name","login","response","newAuth","user","id","googleId","profileObj","givenName","surname","familyName","image","imageUrl","token","tokenId","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,UAApD;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAMC,IAAI,GAAGF,WAAW,CAAEG,KAAD,IAAgBA,KAAK,CAACD,IAAvB,CAAxB;AACA,QAAME,cAAc,GAAGF,IAAI,CAACG,IAAL,CAAUC,aAAjC;AACA,QAAMC,aAAa,GAAGL,IAAI,CAACM,SAA3B;AACA,QAAMC,aAAa,GAAGF,aAAa,CAACG,IAApC;;AAEA,QAAMC,KAAK,GAAIC,QAAD,IAAmB;AAC/B,UAAMC,OAAO,GAAG;AACdX,MAAAA,IAAI,EAAE;AACJG,QAAAA,IAAI,EAAE;AACJC,UAAAA,aAAa,EAAE,IADX;AAEJQ,UAAAA,IAAI,EAAE;AACJC,YAAAA,EAAE,EAAEH,QAAQ,CAACI,QADT;AAEJN,YAAAA,IAAI,EAAEE,QAAQ,CAACK,UAAT,CAAoBC,SAFtB;AAGJC,YAAAA,OAAO,EAAEP,QAAQ,CAACK,UAAT,CAAoBG,UAHzB;AAIJC,YAAAA,KAAK,EAAET,QAAQ,CAACK,UAAT,CAAoBK;AAJvB,WAFF;AAQJC,UAAAA,KAAK,EAAEX,QAAQ,CAACY;AARZ,SADF;AAWJhB,QAAAA,SAAS,EAAED;AAXP;AADQ,KAAhB;AAeAkB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBxB,MAAAA,IAAI,EAAEW;AAAvB,KAAD,CAAR;AACD,GAjBD;;AAmBA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGJ,aAAa,gBACZ,uDACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGL,cAAc,gBACb,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,gBAGb,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,SAAS,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADF,CADF,CADF,CALJ,CADY,gBAgBZ,yCAlBJ,CADF,CADF;AAyBD,CAlDD;;AAoDA,eAAeH,SAAf","sourcesContent":["import React from 'react'\n\nimport { Container, Grid, LoginInfo, Message } from './styles'\nimport { Col, Row } from 'react-bootstrap'\n\nimport ChallengeInfo from '../ChallengeInfo'\nimport ContestList from '../ContestList'\n\nimport Drop from '../Drop'\nimport { useSelector } from 'react-redux'\n\nconst Challenge: React.FC = () => {\n  const data = useSelector((state: any) => state.data)\n  const authentication = data.auth.authenticated\n  const dataChallenge = data.challenge\n  const challengeName = dataChallenge.name\n\n  const login = (response: any) => {\n    const newAuth = {\n      data: {\n        auth: {\n          authenticated: true,\n          user: {\n            id: response.googleId,\n            name: response.profileObj.givenName,\n            surname: response.profileObj.familyName,\n            image: response.profileObj.imageUrl\n          },\n          token: response.tokenId\n        },\n        challenge: dataChallenge\n      }\n    }\n    dispatch({ type: 'LOGIN', data: newAuth })\n  }\n\n  return (\n    <Container>\n      <Grid>\n        <ContestList />\n        {challengeName ? (\n          <>\n            <ChallengeInfo />\n            {authentication ? (\n              <Drop />\n            ) : (\n              <Message>\n                <Row>\n                  <Col xs={12} className=\"text-center\">\n                    <LoginInfo>You need to log in to send your solution!</LoginInfo>\n                  </Col>\n                </Row>\n              </Message>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n      </Grid>\n    </Container>\n  )\n}\n\nexport default Challenge\n"]},"metadata":{},"sourceType":"module"}