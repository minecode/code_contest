{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/ContestList/index.tsx\";\nimport React, { useCallback } from 'react';\nimport { ContainerList, Category } from './styles';\nimport ChallengeButton from '../ChallengeButton';\nimport ContestButton from '../ContestButton';\nimport { useFetch } from 'src/hooks/useFetch';\nimport { titleCase } from '../Utils';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst ContestList = () => {\n  const dispatch = useDispatch();\n  const dataAuth = useSelector(state => state.data.auth);\n  const {\n    data\n  } = useFetch('/git/trees/bed6cd92797d728d25ec5b2ecca010f03196cbdb?recursive=\"true\"');\n  const handleSelectChange = useCallback(id => {\n    var _document$getElementB;\n\n    const challenges = (_document$getElementB = document.getElementById('listOfContests')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.childNodes;\n    challenges === null || challenges === void 0 ? void 0 : challenges.forEach(challenge => {\n      if (challenge.isEqualNode(document.getElementById(id.toString()))) {\n        data === null || data === void 0 ? void 0 : data.tree.forEach(selectedChallenge => {\n          if (selectedChallenge.path.split('/').length === 2) {\n            var _challenge$firstChild, _challenge$firstChild2;\n\n            const selectedContestName = selectedChallenge.path.split('/')[0].split('_').join(' ');\n            const selectedChallengeName = selectedChallenge.path.split('/')[1].split('_').join(' ');\n            console.log((_challenge$firstChild = challenge.firstChild) === null || _challenge$firstChild === void 0 ? void 0 : _challenge$firstChild.ATTRIBUTE_NODE);\n            console.log(document.getElementById(id.toString()));\n\n            if (titleCase(selectedChallengeName) === ((_challenge$firstChild2 = challenge.firstChild) === null || _challenge$firstChild2 === void 0 ? void 0 : _challenge$firstChild2.textContent)) {\n              const newChallenge = {\n                data: {\n                  auth: dataAuth,\n                  challenge: {\n                    name: `${selectedContestName}/${selectedChallengeName}`\n                  }\n                }\n              };\n              console.log(`${selectedContestName}/${selectedChallengeName}`);\n              dispatch({\n                type: 'CHALLENGE',\n                data: newChallenge\n              });\n            }\n          }\n        });\n      }\n    });\n  }, [data, dataAuth, dispatch]);\n  return /*#__PURE__*/React.createElement(ContainerList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Category, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Contests\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"listOfContests\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, data === null || data === void 0 ? void 0 : data.tree.filter((contest, i) => {\n    return contest.path.split('/').length === 1 || contest.path.split('/').length === 2 && contest.path.split('/')[1] !== 'requirements.txt';\n  }).map((contest, i) => /*#__PURE__*/React.createElement(React.Fragment, null, contest.path.split('/').length === 1 ? /*#__PURE__*/React.createElement(ContestButton, {\n    key: i,\n    contestName: contest.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 53\n    }\n  }) : contest.path.split('/').length === 2 ? /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    id: i.toString(),\n    onClick: () => handleSelectChange(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 56\n    }\n  }, /*#__PURE__*/React.createElement(ChallengeButton, {\n    challengeName: contest.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null)))));\n};\n\nexport default ContestList;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/ContestList/index.tsx"],"names":["React","useCallback","ContainerList","Category","ChallengeButton","ContestButton","useFetch","titleCase","useSelector","useDispatch","ContestList","dispatch","dataAuth","state","data","auth","handleSelectChange","id","challenges","document","getElementById","childNodes","forEach","challenge","isEqualNode","toString","tree","selectedChallenge","path","split","length","selectedContestName","join","selectedChallengeName","console","log","firstChild","ATTRIBUTE_NODE","textContent","newChallenge","name","type","filter","contest","i","map"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react'\n\nimport { ContainerList, Category } from './styles'\n\nimport ChallengeButton from '../ChallengeButton'\nimport ContestButton from '../ContestButton'\nimport { useFetch } from 'src/hooks/useFetch'\nimport { titleCase } from '../Utils'\nimport { useSelector, useDispatch } from 'react-redux'\n\ninterface Contest {\n  tree: Challenge []\n}\n\ninterface Challenge {\n  path: string;\n}\n\nconst ContestList: React.FC = () => {\n  const dispatch = useDispatch()\n  const dataAuth = useSelector((state: any) => state.data.auth)\n\n  const { data } = useFetch<Contest>('/git/trees/bed6cd92797d728d25ec5b2ecca010f03196cbdb?recursive=\"true\"')\n  const handleSelectChange = useCallback(\n    (id: number) => {\n      const challenges = document.getElementById('listOfContests')?.childNodes\n        challenges?.forEach((challenge) => {\n          if (\n            challenge.isEqualNode(\n              document.getElementById(id.toString())\n            )\n          ) {\n                data?.tree.forEach((selectedChallenge) => {\n                  if (selectedChallenge.path.split('/').length === 2) {\n                    const selectedContestName = selectedChallenge.path.split('/')[0].split('_').join(' ')\n                    const selectedChallengeName = selectedChallenge.path.split('/')[1].split('_').join(' ')\n                    console.log(challenge.firstChild?.ATTRIBUTE_NODE)\n                    console.log(document.getElementById(id.toString()))\n                    if (\n                      titleCase(selectedChallengeName) ===\n                      challenge.firstChild?.textContent\n                    ) {\n                      const newChallenge = {\n                        data: {\n                          auth: dataAuth,\n                          challenge: { name: `${selectedContestName}/${selectedChallengeName}` }\n                        }\n                      }\n                      console.log(`${selectedContestName}/${selectedChallengeName}`)\n                      dispatch({ type: 'CHALLENGE', data: newChallenge })\n                    }\n                  }\n                })\n          }\n        })\n    },\n    [data, dataAuth, dispatch]\n  )\n\n  return (\n    <ContainerList>\n      <Category>\n        <span>Contests</span>\n      </Category>\n      <div id='listOfContests'>\n        {data?.tree.filter((contest, i) => {\n          return (contest.path.split('/').length === 1 || (contest.path.split('/').length === 2 && contest.path.split('/')[1] !== 'requirements.txt'))\n        }).map((contest, i) => (\n          <>\n            {contest.path.split('/').length === 1 ? <ContestButton key={i} contestName={contest.path}></ContestButton>\n              : contest.path.split('/').length === 2 ? <div\n                key={i}\n                id={i.toString()}\n                onClick={() => handleSelectChange(i)}\n              >\n                <ChallengeButton\n                  challengeName={contest.path}\n                />\n              </div> : <></>\n            }\n          </>\n        ))}\n      </div>\n    </ContainerList>\n  )\n}\n\nexport default ContestList\n"]},"metadata":{},"sourceType":"module"}