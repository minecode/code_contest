{"ast":null,"code":"import { createStore } from 'redux';\nconst INITIAL_STATE = {\n  data: {\n    auth: {\n      authenticated: false,\n      user: {\n        id: null,\n        name: null,\n        surname: null,\n        image: null\n      },\n      token: null\n    },\n    selectedChallenge: {\n      name: null\n    },\n    globalScore: null,\n    listOfUsers: null,\n    challengeScore: null,\n    userScore: null,\n    challengeIndex: null,\n    challengeList: null\n  }\n};\n\nfunction globalStore(state, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.data;\n\n    case 'LOGOUT':\n      return action.data;\n\n    case 'CHALLENGE':\n      return action.data;\n\n    default:\n      return INITIAL_STATE;\n  }\n}\n\nconst store = createStore(globalStore);\nexport default store;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/store/index.tsx"],"names":["createStore","INITIAL_STATE","data","auth","authenticated","user","id","name","surname","image","token","selectedChallenge","globalScore","listOfUsers","challengeScore","userScore","challengeIndex","challengeList","globalStore","state","action","type","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE;AACJC,MAAAA,aAAa,EAAE,KADX;AAEJC,MAAAA,IAAI,EAAE;AACJC,QAAAA,EAAE,EAAE,IADA;AAEJC,QAAAA,IAAI,EAAE,IAFF;AAGJC,QAAAA,OAAO,EAAE,IAHL;AAIJC,QAAAA,KAAK,EAAE;AAJH,OAFF;AAQJC,MAAAA,KAAK,EAAE;AARH,KADF;AAWJC,IAAAA,iBAAiB,EAAE;AACjBJ,MAAAA,IAAI,EAAE;AADW,KAXf;AAcJK,IAAAA,WAAW,EAAE,IAdT;AAeJC,IAAAA,WAAW,EAAE,IAfT;AAgBJC,IAAAA,cAAc,EAAE,IAhBZ;AAiBJC,IAAAA,SAAS,EAAE,IAjBP;AAkBJC,IAAAA,cAAc,EAAE,IAlBZ;AAmBJC,IAAAA,aAAa,EAAE;AAnBX;AADc,CAAtB;;AAwBA,SAASC,WAAT,CAAsBC,KAAtB,EAAkCC,MAAlC,EAA+C;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,aAAOD,MAAM,CAAClB,IAAd;;AACF,SAAK,QAAL;AACE,aAAOkB,MAAM,CAAClB,IAAd;;AACF,SAAK,WAAL;AACE,aAAOkB,MAAM,CAAClB,IAAd;;AACF;AACE,aAAOD,aAAP;AARJ;AAUD;;AAED,MAAMqB,KAAK,GAAGtB,WAAW,CAACkB,WAAD,CAAzB;AAEA,eAAeI,KAAf","sourcesContent":["import { createStore } from 'redux'\n\nconst INITIAL_STATE = {\n  data: {\n    auth: {\n      authenticated: false,\n      user: {\n        id: null,\n        name: null,\n        surname: null,\n        image: null\n      },\n      token: null\n    },\n    selectedChallenge: {\n      name: null\n    },\n    globalScore: null,\n    listOfUsers: null,\n    challengeScore: null,\n    userScore: null,\n    challengeIndex: null,\n    challengeList: null\n  }\n}\n\nfunction globalStore (state: any, action: any) {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.data\n    case 'LOGOUT':\n      return action.data\n    case 'CHALLENGE':\n      return action.data\n    default:\n      return INITIAL_STATE\n  }\n}\n\nconst store = createStore(globalStore)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}