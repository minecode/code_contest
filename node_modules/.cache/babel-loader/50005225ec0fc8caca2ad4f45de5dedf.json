{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/ChallengeButton/index.tsx\";\nimport React from 'react';\nimport { titleCase } from '../Utils';\nimport { Container, HashtagIcon, CheckIcon } from './styles';\nimport { useSelector } from 'react-redux';\n\nconst ChallengeButton = ({\n  challengeName\n}) => {\n  const selectedChallengeName = useSelector(state => state.data.selectedChallenge.name);\n  const userScore = useSelector(state => state.data.userScore);\n  const challengeList = useSelector(state => state.data.challengeList);\n  return /*#__PURE__*/React.createElement(Container, {\n    className: selectedChallengeName && challengeName.split('/')[0] === selectedChallengeName.split('/')[0].split(' ').join('_') && challengeName.split('/')[1] === selectedChallengeName.split('/')[1].split(' ').join('_') ? 'active' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HashtagIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), challengeName ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 28\n    }\n  }, titleCase(challengeName.split('/')[1])) : /*#__PURE__*/React.createElement(React.Fragment, null)), challengeList && challengeList.filter(element => {\n    return element.challengeId.split('_').join(' ').toUpperCase === challengeName.toUpperCase;\n  }).length > 0 ? /*#__PURE__*/React.createElement(CheckIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n};\n\nexport default ChallengeButton;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/ChallengeButton/index.tsx"],"names":["React","titleCase","Container","HashtagIcon","CheckIcon","useSelector","ChallengeButton","challengeName","selectedChallengeName","state","data","selectedChallenge","name","userScore","challengeList","split","join","width","filter","element","challengeId","toUpperCase","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,SAAjC,QAAkD,UAAlD;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAaA,MAAMC,eAAgC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAC9D,QAAMC,qBAAqB,GAAGH,WAAW,CAAEI,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWC,iBAAX,CAA6BC,IAA9C,CAAzC;AACA,QAAMC,SAAS,GAAGR,WAAW,CAAEI,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWG,SAA5B,CAA7B;AACA,QAAMC,aAA0B,GAAGT,WAAW,CAAEI,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWI,aAA5B,CAA9C;AAEA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEN,qBAAqB,IAAID,aAAa,CAACQ,KAAd,CAAoB,GAApB,EAAyB,CAAzB,MAAgCP,qBAAqB,CAACO,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoCA,KAApC,CAA0C,GAA1C,EAA+CC,IAA/C,CAAoD,GAApD,CAAzD,IAAqHT,aAAa,CAACQ,KAAd,CAAoB,GAApB,EAAyB,CAAzB,MAAgCP,qBAAqB,CAACO,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoCA,KAApC,CAA0C,GAA1C,EAA+CC,IAA/C,CAAoD,GAApD,CAArJ,GAAgN,QAAhN,GAA2N,EAAjP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGV,aAAa,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,SAAS,CAACM,aAAa,CAACQ,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAD,CAAhB,CAAH,gBAA2D,yCAF3E,CADF,EAKGD,aAAa,IAAIA,aAAa,CAACI,MAAd,CAAsBC,OAAD,IAAa;AAClD,WAAOA,OAAO,CAACC,WAAR,CAAoBL,KAApB,CAA0B,GAA1B,EAA+BC,IAA/B,CAAoC,GAApC,EAAyCK,WAAzC,KAAyDd,aAAa,CAACc,WAA9E;AACD,GAFiB,EAEfC,MAFe,GAEN,CAFX,gBAEe,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFf,gBAE+B,yCAPlC,CADF,CADF;AAaD,CAlBD;;AAoBA,eAAehB,eAAf","sourcesContent":["import React from 'react'\nimport { titleCase } from '../Utils'\n\nimport { Container, HashtagIcon, CheckIcon } from './styles'\nimport { useSelector } from 'react-redux'\n\nexport interface Props {\n  challengeName: string\n}\nexport interface Challenge {\n  id: string,\n  userId: string,\n  contestId: string,\n  challengeId: string,\n  score: number\n}\n\nconst ChallengeButton: React.FC<Props> = ({ challengeName }) => {\n  const selectedChallengeName = useSelector((state: any) => state.data.selectedChallenge.name)\n  const userScore = useSelector((state: any) => state.data.userScore)\n  const challengeList: Challenge[] = useSelector((state: any) => state.data.challengeList)\n\n  return (\n    <Container className={selectedChallengeName && challengeName.split('/')[0] === selectedChallengeName.split('/')[0].split(' ').join('_') && challengeName.split('/')[1] === selectedChallengeName.split('/')[1].split(' ').join('_') ? 'active' : ''}>\n      <div style={{ width: '100%' }}>\n        <div>\n          <HashtagIcon />\n          {challengeName ? <span>{titleCase(challengeName.split('/')[1])}</span> : <></>}\n        </div>\n        {challengeList && challengeList.filter((element) => {\n          return element.challengeId.split('_').join(' ').toUpperCase === challengeName.toUpperCase\n        }).length > 0 ? <CheckIcon /> : <></> }\n      </div>\n    </Container>\n  )\n}\n\nexport default ChallengeButton\n"]},"metadata":{},"sourceType":"module"}