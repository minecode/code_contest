{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/ChallengeButton/index.tsx\";\nimport React from 'react';\nimport { titleCase } from '../Utils';\nimport { Container, HashtagIcon, CheckIcon } from './styles';\nimport { useSelector } from 'react-redux';\n\nconst ChallengeButton = ({\n  challengeName\n}) => {\n  const data = useSelector(state => state.data);\n  const dataSelectedChallenge = data.selectedChallenge;\n  const selectedChallengeName = dataSelectedChallenge.name;\n  const userScore = data.userScore;\n  return /*#__PURE__*/React.createElement(Container, {\n    className: selectedChallengeName && challengeName.split('/')[0] === selectedChallengeName.split('/')[0].split(' ').join('_') && challengeName.split('/')[1] === selectedChallengeName.split('/')[1].split(' ').join('_') ? 'active' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HashtagIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }), challengeName ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 28\n    }\n  }, titleCase(challengeName.split('/')[1])) : /*#__PURE__*/React.createElement(React.Fragment, null)), userScore && userScore.length > 0 ? /*#__PURE__*/React.createElement(CheckIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 46\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n};\n\nexport default ChallengeButton;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/ChallengeButton/index.tsx"],"names":["React","titleCase","Container","HashtagIcon","CheckIcon","useSelector","ChallengeButton","challengeName","data","state","dataSelectedChallenge","selectedChallenge","selectedChallengeName","name","userScore","split","join","width","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,SAAjC,QAAkD,UAAlD;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAMA,MAAMC,eAAgC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAC9D,QAAMC,IAAI,GAAGH,WAAW,CAAEI,KAAD,IAAgBA,KAAK,CAACD,IAAvB,CAAxB;AAEA,QAAME,qBAAqB,GAAGF,IAAI,CAACG,iBAAnC;AACA,QAAMC,qBAAqB,GAAGF,qBAAqB,CAACG,IAApD;AACA,QAAMC,SAAS,GAAGN,IAAI,CAACM,SAAvB;AAEA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEF,qBAAqB,IAAIL,aAAa,CAACQ,KAAd,CAAoB,GAApB,EAAyB,CAAzB,MAAgCH,qBAAqB,CAACG,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoCA,KAApC,CAA0C,GAA1C,EAA+CC,IAA/C,CAAoD,GAApD,CAAzD,IAAqHT,aAAa,CAACQ,KAAd,CAAoB,GAApB,EAAyB,CAAzB,MAAgCH,qBAAqB,CAACG,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoCA,KAApC,CAA0C,GAA1C,EAA+CC,IAA/C,CAAoD,GAApD,CAArJ,GAAgN,QAAhN,GAA2N,EAAjP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGV,aAAa,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,SAAS,CAACM,aAAa,CAACQ,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAD,CAAhB,CAAH,gBAA2D,yCAF3E,CADF,EAKGD,SAAS,IAAIA,SAAS,CAACI,MAAV,GAAmB,CAAhC,gBAAoC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApC,gBAAoD,yCALvD,CADF,CADF;AAWD,CAlBD;;AAoBA,eAAeZ,eAAf","sourcesContent":["import React from 'react'\nimport { titleCase } from '../Utils'\n\nimport { Container, HashtagIcon, CheckIcon } from './styles'\nimport { useSelector } from 'react-redux'\n\nexport interface Props {\n  challengeName: string\n}\n\nconst ChallengeButton: React.FC<Props> = ({ challengeName }) => {\n  const data = useSelector((state: any) => state.data)\n\n  const dataSelectedChallenge = data.selectedChallenge\n  const selectedChallengeName = dataSelectedChallenge.name\n  const userScore = data.userScore\n\n  return (\n    <Container className={selectedChallengeName && challengeName.split('/')[0] === selectedChallengeName.split('/')[0].split(' ').join('_') && challengeName.split('/')[1] === selectedChallengeName.split('/')[1].split(' ').join('_') ? 'active' : ''}>\n      <div style={{ width: '100%' }}>\n        <div>\n          <HashtagIcon />\n          {challengeName ? <span>{titleCase(challengeName.split('/')[1])}</span> : <></>}\n        </div>\n        {userScore && userScore.length > 0 ? <CheckIcon /> : <></> }\n      </div>\n    </Container>\n  )\n}\n\nexport default ChallengeButton\n"]},"metadata":{},"sourceType":"module"}