{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/Layout/index.tsx\";\nimport React, { useState } from 'react';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport { Grid, Auth } from './styles';\nimport Challenge from '../Challenge';\nimport UserList from '../UserList';\n\nconst Layout = () => {\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const login = response => {\n    setLoggedIn(true);\n  };\n\n  const badResponseGoogle = response => {\n    console.log(response);\n  };\n\n  const logout = () => {\n    setLoggedIn(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Auth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }, loggedIn ? /*#__PURE__*/React.createElement(GoogleLogout, {\n    clientId: \"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\",\n    buttonText: \"Logout\",\n    onLogoutSuccess: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }\n  }) : /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\",\n    buttonText: \"Login\",\n    onSuccess: login,\n    onFailure: badResponseGoogle,\n    cookiePolicy: 'single_host_origin',\n    isSignedIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Challenge, {\n    loggedIn: loggedIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(UserList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default Layout;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/Layout/index.tsx"],"names":["React","useState","GoogleLogin","GoogleLogout","Grid","Auth","Challenge","UserList","Layout","loggedIn","setLoggedIn","login","response","badResponseGoogle","console","log","logout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,oBAA1C;AAEA,SAASC,IAAT,EAAeC,IAAf,QAA2B,UAA3B;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,MAAgB,GAAG,MAAM;AAC9B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAU,KAAV,CAAxC;;AAEA,QAAMU,KAAK,GAAIC,QAAD,IAAmB;AAChCF,IAAAA,WAAW,CAAC,IAAD,CAAX;AACA,GAFD;;AAIA,QAAMG,iBAAiB,GAAID,QAAD,IAAmB;AAC5CE,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,GAFD;;AAIA,QAAMI,MAAM,GAAG,MAAM;AACpBN,IAAAA,WAAW,CAAC,KAAD,CAAX;AACA,GAFD;;AAIA,sBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,QAAQ,gBACR,oBAAC,YAAD;AACC,IAAA,QAAQ,EAAC,0EADV;AAEC,IAAA,UAAU,EAAC,QAFZ;AAGC,IAAA,eAAe,EAAEO,MAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,gBAOR,oBAAC,WAAD;AACC,IAAA,QAAQ,EAAC,0EADV;AAEC,IAAA,UAAU,EAAC,OAFZ;AAGC,IAAA,SAAS,EAAEL,KAHZ;AAIC,IAAA,SAAS,EAAEE,iBAJZ;AAKC,IAAA,YAAY,EAAE,oBALf;AAMC,IAAA,UAAU,EAAE,IANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADD,eAmBC,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEJ,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBD,eAoBC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBD,CADD;AAwBA,CAvCD;;AAyCA,eAAeD,MAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\n\nimport { Grid, Auth } from './styles';\n\nimport Challenge from '../Challenge';\nimport UserList from '../UserList';\n\nconst Layout: React.FC = () => {\n\tconst [loggedIn, setLoggedIn] = useState<Boolean>(false);\n\n\tconst login = (response: any) => {\n\t\tsetLoggedIn(true);\n\t};\n\n\tconst badResponseGoogle = (response: any) => {\n\t\tconsole.log(response);\n\t};\n\n\tconst logout = () => {\n\t\tsetLoggedIn(false);\n\t};\n\n\treturn (\n\t\t<Grid>\n\t\t\t<Auth>\n\t\t\t\t{loggedIn ? (\n\t\t\t\t\t<GoogleLogout\n\t\t\t\t\t\tclientId='156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com'\n\t\t\t\t\t\tbuttonText='Logout'\n\t\t\t\t\t\tonLogoutSuccess={logout}\n\t\t\t\t\t></GoogleLogout>\n\t\t\t\t) : (\n\t\t\t\t\t<GoogleLogin\n\t\t\t\t\t\tclientId='156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com'\n\t\t\t\t\t\tbuttonText='Login'\n\t\t\t\t\t\tonSuccess={login}\n\t\t\t\t\t\tonFailure={badResponseGoogle}\n\t\t\t\t\t\tcookiePolicy={'single_host_origin'}\n\t\t\t\t\t\tisSignedIn={true}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Auth>\n\t\t\t<Challenge loggedIn={loggedIn} />\n\t\t\t<UserList />\n\t\t</Grid>\n\t);\n};\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}