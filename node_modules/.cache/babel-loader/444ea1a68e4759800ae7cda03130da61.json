{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/Challenge/index.tsx\";\nimport React, { useCallback, useState } from 'react';\nimport { Container, Grid } from './styles';\nimport ChallengeInfo from '../ChallengeInfo';\nimport { useFetch } from 'src/hooks/useFetch';\nimport Drop from '../Drop';\nimport { titleCase } from '../Utils';\nimport { useSelector } from 'react-redux';\n\nconst Challenge = () => {\n  const [challengeName, setChallengeName] = useState('');\n  const [challengeSelected, setChallengeSelected] = useState('');\n  const authentication = useSelector(state => state.data.authenticated);\n  const {\n    data\n  } = useFetch('/contents/challenges');\n  const handleSelectChange = useCallback(id => {\n    var _document$getElementB;\n\n    const challenges = (_document$getElementB = document.getElementById('listOfChallenges')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.childNodes;\n    challenges === null || challenges === void 0 ? void 0 : challenges.forEach(challenge => {\n      if (challenge.isEqualNode(document.getElementById(id.toString()))) {\n        data === null || data === void 0 ? void 0 : data.forEach(selectedChallenge => {\n          var _challenge$firstChild;\n\n          const selectedChallengeName = selectedChallenge.name.split('_').join(' ');\n\n          if (titleCase(selectedChallengeName) === ((_challenge$firstChild = challenge.firstChild) === null || _challenge$firstChild === void 0 ? void 0 : _challenge$firstChild.textContent)) {\n            setChallengeName(selectedChallengeName);\n            setChallengeSelected(id.toString());\n          }\n        });\n      }\n    });\n  }, [data]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, challengeName ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ChallengeInfo, {\n    challengeName: challengeName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), authentication ? /*#__PURE__*/React.createElement(Drop, {\n    challengeName: challengeName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n};\n\nexport default Challenge;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/Challenge/index.tsx"],"names":["React","useCallback","useState","Container","Grid","ChallengeInfo","useFetch","Drop","titleCase","useSelector","Challenge","challengeName","setChallengeName","challengeSelected","setChallengeSelected","authentication","state","data","authenticated","handleSelectChange","id","challenges","document","getElementById","childNodes","forEach","challenge","isEqualNode","toString","selectedChallenge","selectedChallengeName","name","split","join","firstChild","textContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AAEA,SAASC,SAAT,EAAoBC,IAApB,QAAyD,UAAzD;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;AAGA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAMA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACW,iBAAD,EAAoBC,oBAApB,IAA4CZ,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAMa,cAAc,GAAGN,WAAW,CAAEO,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWC,aAA5B,CAAlC;AAEA,QAAM;AAAED,IAAAA;AAAF,MAAWX,QAAQ,CAAc,sBAAd,CAAzB;AACA,QAAMa,kBAAkB,GAAGlB,WAAW,CACnCmB,EAAD,IAAgB;AAAA;;AACd,UAAMC,UAAU,4BAAGC,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAH,0DAAG,sBACnBC,UADA;AAEHH,IAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEI,OAAZ,CAAqBC,SAAD,IAAe;AACjC,UACEA,SAAS,CAACC,WAAV,CACEL,QAAQ,CAACC,cAAT,CAAwBH,EAAE,CAACQ,QAAH,EAAxB,CADF,CADF,EAIE;AACFX,QAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEQ,OAAN,CAAeI,iBAAD,IAAuB;AAAA;;AACnC,gBAAMC,qBAAqB,GAAGD,iBAAiB,CAACE,IAAlB,CAC3BC,KAD2B,CACrB,GADqB,EAE3BC,IAF2B,CAEtB,GAFsB,CAA9B;;AAGA,cACEzB,SAAS,CAACsB,qBAAD,CAAT,+BACFJ,SAAS,CAACQ,UADR,0DACF,sBAAsBC,WADpB,CADF,EAGE;AACAvB,YAAAA,gBAAgB,CAACkB,qBAAD,CAAhB;AACAhB,YAAAA,oBAAoB,CAACM,EAAE,CAACQ,QAAH,EAAD,CAApB;AACD;AACF,SAXD;AAYC;AACF,KAnBD;AAoBE,GAxBmC,EAyBpC,CAACX,IAAD,CAzBoC,CAAtC;AA4BA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,aAAa,gBACZ,uDACE,oBAAC,aAAD;AAAe,IAAA,aAAa,EAAEA,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGI,cAAc,gBACb,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAEJ,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,gBAGb,yCALJ,CADY,gBAUZ,yCAXJ,CADF,CADF;AAkBD,CApDD;;AAsDA,eAAeD,SAAf","sourcesContent":["import React, { useCallback, useState } from 'react'\n\nimport { Container, Grid, ContainerList, Category } from './styles'\n\nimport ChallengeInfo from '../ChallengeInfo'\nimport ChallengeButton from '../ChallengeButton'\n\nimport { useFetch } from 'src/hooks/useFetch'\nimport Drop from '../Drop'\nimport { titleCase } from '../Utils'\nimport { useSelector } from 'react-redux'\n\ninterface Challenge {\n\tname: string;\n}\n\nconst Challenge: React.FC = () => {\n  const [challengeName, setChallengeName] = useState('')\n  const [challengeSelected, setChallengeSelected] = useState('')\n  const authentication = useSelector((state: any) => state.data.authenticated)\n\n  const { data } = useFetch<Challenge[]>('/contents/challenges')\n  const handleSelectChange = useCallback(\n    (id: number) => {\n      const challenges = document.getElementById('listOfChallenges')\n\t\t\t\t?.childNodes\n\t\t\tchallenges?.forEach((challenge) => {\n\t\t\t  if (\n\t\t\t    challenge.isEqualNode(\n\t\t\t      document.getElementById(id.toString())\n\t\t\t    )\n\t\t\t  ) {\n\t\t\t\t\tdata?.forEach((selectedChallenge) => {\n\t\t\t\t\t  const selectedChallengeName = selectedChallenge.name\n\t\t\t\t\t    .split('_')\n\t\t\t\t\t    .join(' ')\n\t\t\t\t\t  if (\n\t\t\t\t\t    titleCase(selectedChallengeName) ===\n\t\t\t\t\t\t\tchallenge.firstChild?.textContent\n\t\t\t\t\t  ) {\n\t\t\t\t\t    setChallengeName(selectedChallengeName)\n\t\t\t\t\t    setChallengeSelected(id.toString())\n\t\t\t\t\t  }\n\t\t\t\t\t})\n\t\t\t  }\n\t\t\t})\n    },\n    [data]\n  )\n\n  return (\n    <Container>\n      <Grid>\n        {challengeName ? (\n          <>\n            <ChallengeInfo challengeName={challengeName} />\n            {authentication ? (\n              <Drop challengeName={challengeName} />\n            ) : (\n              <></>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n      </Grid>\n    </Container>\n  )\n}\n\nexport default Challenge\n"]},"metadata":{},"sourceType":"module"}