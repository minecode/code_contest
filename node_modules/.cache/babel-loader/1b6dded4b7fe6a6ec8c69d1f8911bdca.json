{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/Layout/index.tsx\";\nimport React, { useState } from 'react';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport { Grid, Auth } from './styles';\nimport Challenge from '../Challenge';\nimport UserList from '../UserList';\n\nconst Layout = () => {\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const login = response => {\n    setLoggedIn(true);\n  };\n\n  const badResponseGoogle = response => {\n    console.log(response);\n  };\n\n  const logout = () => {\n    setLoggedIn(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Auth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, loggedIn ? /*#__PURE__*/React.createElement(GoogleLogout, {\n    clientId: \"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\",\n    buttonText: \"Logout\",\n    onLogoutSuccess: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\",\n    buttonText: \"Login\",\n    onSuccess: login,\n    onFailure: badResponseGoogle,\n    cookiePolicy: 'single_host_origin',\n    isSignedIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Challenge, {\n    loggedIn: loggedIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(UserList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Layout;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/Layout/index.tsx"],"names":["React","useState","GoogleLogin","GoogleLogout","Grid","Auth","Challenge","UserList","Layout","loggedIn","setLoggedIn","login","response","badResponseGoogle","console","log","logout"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,oBAA1C;AAEA,SAASC,IAAT,EAAeC,IAAf,QAA2B,UAA3B;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAGA,MAAMC,MAAgB,GAAG,MAAM;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAU,KAAV,CAAxC;;AAEA,QAAMU,KAAK,GAAIC,QAAD,IAAmB;AAC/BF,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,QAAMG,iBAAiB,GAAID,QAAD,IAAmB;AAC3CE,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,GAFD;;AAIA,QAAMI,MAAM,GAAG,MAAM;AACnBN,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAFD;;AAIA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,gBACP,oBAAC,YAAD;AACE,IAAA,QAAQ,EAAC,0EADX;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,eAAe,EAAEO,MAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,gBAOP,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAC,0EADX;AAEE,IAAA,UAAU,EAAC,OAFb;AAGE,IAAA,SAAS,EAAEL,KAHb;AAIE,IAAA,SAAS,EAAEE,iBAJb;AAKE,IAAA,YAAY,EAAE,oBALhB;AAME,IAAA,UAAU,EAAE,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADF,eAmBE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEJ,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,eAoBE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADF;AAwBD,CAvCD;;AAyCA,eAAeD,MAAf","sourcesContent":["import React, { useState } from 'react'\n\nimport { GoogleLogin, GoogleLogout } from 'react-google-login'\n\nimport { Grid, Auth } from './styles'\n\nimport Challenge from '../Challenge'\nimport UserList from '../UserList'\nimport ChallengeButton from '../ChallengeButton'\n\nconst Layout: React.FC = () => {\n  const [loggedIn, setLoggedIn] = useState<boolean>(false)\n\n  const login = (response: any) => {\n    setLoggedIn(true)\n  }\n\n  const badResponseGoogle = (response: any) => {\n    console.log(response)\n  }\n\n  const logout = () => {\n    setLoggedIn(false)\n  }\n\n  return (\n    <Grid>\n      <Auth>\n        {loggedIn ? (\n          <GoogleLogout\n            clientId='156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com'\n            buttonText='Logout'\n            onLogoutSuccess={logout}\n          ></GoogleLogout>\n        ) : (\n          <GoogleLogin\n            clientId='156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com'\n            buttonText='Login'\n            onSuccess={login}\n            onFailure={badResponseGoogle}\n            cookiePolicy={'single_host_origin'}\n            isSignedIn={true}\n          />\n        )}\n      </Auth>\n      <Challenge loggedIn={loggedIn} />\n      <UserList />\n    </Grid>\n  )\n}\n\nexport default Layout\n"]},"metadata":{},"sourceType":"module"}