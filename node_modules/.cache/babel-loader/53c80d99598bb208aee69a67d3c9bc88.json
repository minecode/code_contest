{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/ContestList/index.tsx\";\nimport React, { useCallback } from 'react';\nimport { ContainerList, Category } from './styles';\nimport { useFetch } from 'src/hooks/useFetch';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst ContestList = () => {\n  const dispatch = useDispatch();\n  const dataAuth = useSelector(state => state.data.auth);\n  const {\n    data\n  } = useFetch('/git/trees/ba3a18d7f49f2296bfd47ee3db7682f8ed7cb8f1?recursive=\"true\"');\n  data === null || data === void 0 ? void 0 : data.forEach(element => {\n    console.log(element.tree);\n  });\n  const handleSelectChange = useCallback(id => {\n    var _document$getElementB;\n\n    const challenges = (_document$getElementB = document.getElementById('listOfContests')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.childNodes;\n    challenges === null || challenges === void 0 ? void 0 : challenges.forEach(challenge => {\n      if (challenge.isEqualNode(document.getElementById(id.toString()))) {\n        data === null || data === void 0 ? void 0 : data.forEach(selectedChallenge => {\n          console.log('selectedchallenge', selectedChallenge); // selectedChallenge.forEach(element => {\n          //   const selectedChallengeName = element.name\n          //     .split('_')\n          //     .join(' ')\n          //   if (\n          //     titleCase(selectedChallengeName) ===\n          //       challenge.firstChild?.textContent\n          //   ) {\n          //     const newChallenge = {\n          //       data: {\n          //         auth: dataAuth,\n          //         challenge: { name: selectedChallengeName }\n          //       }\n          //     }\n          //     dispatch({ type: 'CHALLENGE', data: newChallenge })\n          //   }\n          // })\n        });\n      }\n    });\n  }, [data, dataAuth, dispatch]);\n  return /*#__PURE__*/React.createElement(ContainerList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Category, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Contests\")));\n};\n\nexport default ContestList;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/ContestList/index.tsx"],"names":["React","useCallback","ContainerList","Category","useFetch","useSelector","useDispatch","ContestList","dispatch","dataAuth","state","data","auth","forEach","element","console","log","tree","handleSelectChange","id","challenges","document","getElementById","childNodes","challenge","isEqualNode","toString","selectedChallenge"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AAEA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,UAAxC;AAIA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAQA,MAAMC,WAAqB,GAAG,MAAM;AAClC,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,QAAMG,QAAQ,GAAGJ,WAAW,CAAEK,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWC,IAA5B,CAA5B;AAEA,QAAM;AAAED,IAAAA;AAAF,MAAWP,QAAQ,CAAc,sEAAd,CAAzB;AACAO,EAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEE,OAAN,CAAcC,OAAO,IAAI;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,IAApB;AACD,GAFD;AAGA,QAAMC,kBAAkB,GAAGjB,WAAW,CACnCkB,EAAD,IAAgB;AAAA;;AACd,UAAMC,UAAU,4BAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAH,0DAAG,sBAA2CC,UAA9D;AACEH,IAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEP,OAAZ,CAAqBW,SAAD,IAAe;AACjC,UACEA,SAAS,CAACC,WAAV,CACEJ,QAAQ,CAACC,cAAT,CAAwBH,EAAE,CAACO,QAAH,EAAxB,CADF,CADF,EAIE;AACIf,QAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEE,OAAN,CAAec,iBAAD,IAAuB;AACnCZ,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCW,iBAAjC,EADmC,CAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,SAnBD;AAoBL;AACF,KA3BD;AA4BH,GA/BmC,EAgCpC,CAAChB,IAAD,EAAOF,QAAP,EAAiBD,QAAjB,CAhCoC,CAAtC;AAmCA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,CADF;AAuBD,CAlED;;AAoEA,eAAeD,WAAf","sourcesContent":["import React, { useCallback } from 'react'\n\nimport { ContainerList, Category } from './styles'\n\nimport ChallengeButton from '../ChallengeButton'\n\nimport { useFetch } from 'src/hooks/useFetch'\nimport { titleCase } from '../Utils'\nimport { useSelector, useDispatch } from 'react-redux'\n\ninterface Challenge {\n  tree: {\n    name: string;\n  }\n}\n\nconst ContestList: React.FC = () => {\n  const dispatch = useDispatch()\n  const dataAuth = useSelector((state: any) => state.data.auth)\n\n  const { data } = useFetch<Challenge[]>('/git/trees/ba3a18d7f49f2296bfd47ee3db7682f8ed7cb8f1?recursive=\"true\"')\n  data?.forEach(element => {\n    console.log(element.tree)\n  })\n  const handleSelectChange = useCallback(\n    (id: number) => {\n      const challenges = document.getElementById('listOfContests')?.childNodes\n        challenges?.forEach((challenge) => {\n          if (\n            challenge.isEqualNode(\n              document.getElementById(id.toString())\n            )\n          ) {\n                data?.forEach((selectedChallenge) => {\n                  console.log('selectedchallenge', selectedChallenge)\n                  // selectedChallenge.forEach(element => {\n                  //   const selectedChallengeName = element.name\n                  //     .split('_')\n                  //     .join(' ')\n                  //   if (\n                  //     titleCase(selectedChallengeName) ===\n                  //       challenge.firstChild?.textContent\n                  //   ) {\n                  //     const newChallenge = {\n                  //       data: {\n                  //         auth: dataAuth,\n                  //         challenge: { name: selectedChallengeName }\n                  //       }\n                  //     }\n                  //     dispatch({ type: 'CHALLENGE', data: newChallenge })\n                  //   }\n                  // })\n                })\n          }\n        })\n    },\n    [data, dataAuth, dispatch]\n  )\n\n  return (\n    <ContainerList>\n      <Category>\n        <span>Contests</span>\n      </Category>\n      {/* <div id='listOfContests'>\n        {data?.filter((contest: any) => {\n          return contest.name !== 'requirements.txt'\n        })\n        .map((contest, i) => (\n          <div\n            key={i}\n            id={i.toString()}\n            onClick={() => handleSelectChange(i)}\n          >\n            <ChallengeButton\n              contestName={contest.name}\n            />\n          </div>\n        ))}\n      </div> */}\n    </ContainerList>\n  )\n}\n\nexport default ContestList\n"]},"metadata":{},"sourceType":"module"}