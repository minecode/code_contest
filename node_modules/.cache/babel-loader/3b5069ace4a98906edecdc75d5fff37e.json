{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/Navbar/index.tsx\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFetch } from 'src/hooks/useFetch';\nimport Authentication from '../Authentication';\nimport { Container, Avatar, UserInfo, Auth } from './styles';\n\nconst Navbar = () => {\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.data);\n  const dataAuth = data.auth;\n  const userId = dataAuth.user.id;\n  const dataSelectedChallenge = data.selectedChallenge;\n  const challengeName = dataSelectedChallenge.name;\n  const {\n    data: globalScore\n  } = useFetch('http://localhost:4001/contests/global');\n  const {\n    data: listOfUsers\n  } = useFetch('http://localhost:4001/contests/user');\n  const {\n    data: challengeScore\n  } = useFetch(`http://localhost:4001/contests/global/${challengeName}`);\n  const {\n    data: userScore\n  } = useFetch(`http://localhost:4001/contests/${userId}/${challengeName}`);\n  const {\n    data: challengeIndex\n  } = useFetch(`/contents/contests/${challengeName === null || challengeName === void 0 ? void 0 : challengeName.split(' ').join('_')}/index.md`);\n  useEffect(() => {\n    const newData = {\n      data: {\n        auth: dataAuth,\n        selectedchallenge: dataSelectedChallenge,\n        globalScore: globalScore,\n        listOfUsers: listOfUsers,\n        challengeScore: challengeScore,\n        userScore: userScore,\n        challengeIndex: challengeIndex\n      }\n    };\n    dispatch({\n      type: 'CHALLENGE',\n      data: newData\n    });\n  }, [globalScore, listOfUsers, challengeScore, userScore, challengeIndex, dispatch]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, dataAuth.authenticated ? /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Welcome, \", dataAuth.user.name, \"!\"), /*#__PURE__*/React.createElement(Avatar, {\n    src: dataAuth.user.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Auth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Authentication, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/Navbar/index.tsx"],"names":["React","useEffect","useDispatch","useSelector","useFetch","Authentication","Container","Avatar","UserInfo","Auth","Navbar","dispatch","data","state","dataAuth","auth","userId","user","id","dataSelectedChallenge","selectedChallenge","challengeName","name","globalScore","listOfUsers","challengeScore","userScore","challengeIndex","split","join","newData","selectedchallenge","type","authenticated","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,EAAsCC,IAAtC,QAAkD,UAAlD;;AAoBA,MAAMC,MAAgB,GAAG,MAAM;AAC7B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,IAAI,GAAGT,WAAW,CAAEU,KAAD,IAAgBA,KAAK,CAACD,IAAvB,CAAxB;AACA,QAAME,QAAQ,GAAGF,IAAI,CAACG,IAAtB;AACA,QAAMC,MAAM,GAAGF,QAAQ,CAACG,IAAT,CAAcC,EAA7B;AACA,QAAMC,qBAAqB,GAAGP,IAAI,CAACQ,iBAAnC;AACA,QAAMC,aAAa,GAAGF,qBAAqB,CAACG,IAA5C;AAEA,QAAM;AAAEV,IAAAA,IAAI,EAAEW;AAAR,MAAwBnB,QAAQ,CAAS,uCAAT,CAAtC;AACA,QAAM;AAAEQ,IAAAA,IAAI,EAAEY;AAAR,MAAwBpB,QAAQ,CAAY,qCAAZ,CAAtC;AACA,QAAM;AAAEQ,IAAAA,IAAI,EAAEa;AAAR,MAA2BrB,QAAQ,CAAU,yCAAwCiB,aAAc,EAAhE,CAAzC;AACA,QAAM;AAAET,IAAAA,IAAI,EAAEc;AAAR,MAAsBtB,QAAQ,CAAU,kCAAiCY,MAAO,IAAGK,aAAc,EAAnE,CAApC;AACA,QAAM;AAAET,IAAAA,IAAI,EAAEe;AAAR,MAA2BvB,QAAQ,CAAa,sBAAqBiB,aAAtB,aAAsBA,aAAtB,uBAAsBA,aAAa,CAAEO,KAAf,CAAqB,GAArB,EAA0BC,IAA1B,CAA+B,GAA/B,CAAoC,WAAtE,CAAzC;AAEA5B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM6B,OAAO,GAAG;AACdlB,MAAAA,IAAI,EAAE;AACJG,QAAAA,IAAI,EAAED,QADF;AAEJiB,QAAAA,iBAAiB,EAAEZ,qBAFf;AAGJI,QAAAA,WAAW,EAAEA,WAHT;AAIJC,QAAAA,WAAW,EAAEA,WAJT;AAKJC,QAAAA,cAAc,EAAEA,cALZ;AAMJC,QAAAA,SAAS,EAAEA,SANP;AAOJC,QAAAA,cAAc,EAAEA;AAPZ;AADQ,KAAhB;AAYAhB,IAAAA,QAAQ,CAAC;AAAEqB,MAAAA,IAAI,EAAE,WAAR;AAAqBpB,MAAAA,IAAI,EAAEkB;AAA3B,KAAD,CAAR;AACD,GAdQ,EAcN,CAACP,WAAD,EAAcC,WAAd,EAA2BC,cAA3B,EAA2CC,SAA3C,EAAsDC,cAAtD,EAAsEhB,QAAtE,CAdM,CAAT;AAgBA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,QAAQ,CAACmB,aAAT,gBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBnB,QAAQ,CAACG,IAAT,CAAcK,IAA9B,MADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAER,QAAQ,CAACG,IAAT,CAAciB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,gBAMC,yCAPJ,eASE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,CADF;AAeD,CA7CD;;AA+CA,eAAexB,MAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useFetch } from 'src/hooks/useFetch'\n\nimport Authentication from '../Authentication'\nimport { Container, Avatar, UserInfo, Auth } from './styles'\n\ninterface User {\n\tuserId?: string;\n\tuser: UserApi;\n\tscore: number;\n}\n\ninterface UserApi {\n\tuserId: string;\n\tfirstName: string;\n\tlastName: string;\n\timageUrl: string;\n}\n\ninterface Challenge {\n  name: string;\n  content: string;\n}\n\nconst Navbar: React.FC = () => {\n  const dispatch = useDispatch()\n  const data = useSelector((state: any) => state.data)\n  const dataAuth = data.auth\n  const userId = dataAuth.user.id\n  const dataSelectedChallenge = data.selectedChallenge\n  const challengeName = dataSelectedChallenge.name\n\n  const { data: globalScore } = useFetch<User[]>('http://localhost:4001/contests/global')\n  const { data: listOfUsers } = useFetch<UserApi[]>('http://localhost:4001/contests/user')\n  const { data: challengeScore } = useFetch<User[]>(`http://localhost:4001/contests/global/${challengeName}`)\n  const { data: userScore } = useFetch<User[]>(`http://localhost:4001/contests/${userId}/${challengeName}`)\n  const { data: challengeIndex } = useFetch<Challenge>(`/contents/contests/${challengeName?.split(' ').join('_')}/index.md`)\n\n  useEffect(() => {\n    const newData = {\n      data: {\n        auth: dataAuth,\n        selectedchallenge: dataSelectedChallenge,\n        globalScore: globalScore,\n        listOfUsers: listOfUsers,\n        challengeScore: challengeScore,\n        userScore: userScore,\n        challengeIndex: challengeIndex\n      }\n    }\n\n    dispatch({ type: 'CHALLENGE', data: newData })\n  }, [globalScore, listOfUsers, challengeScore, userScore, challengeIndex, dispatch])\n\n  return (\n    <Container>\n      {dataAuth.authenticated ? (\n        <UserInfo>\n          <span>Welcome, {dataAuth.user.name}!</span>\n          <Avatar src={dataAuth.user.image} />\n        </UserInfo>\n      ) : (\n        <></>\n      )}\n      <Auth>\n        <Authentication />\n      </Auth>\n    </Container>\n  )\n}\n\nexport default Navbar\n"]},"metadata":{},"sourceType":"module"}