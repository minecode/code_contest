{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/Challenge/index.tsx\";\nimport React from 'react';\nimport { Container, Grid } from './styles';\nimport ChallengeInfo from '../ChallengeInfo';\nimport Drop from '../Drop';\nimport { useSelector } from 'react-redux';\n\nconst Challenge = () => {\n  const authentication = useSelector(state => state.data.authenticated);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, challengeName ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ChallengeInfo, {\n    challengeName: challengeName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), authentication ? /*#__PURE__*/React.createElement(Drop, {\n    challengeName: challengeName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n};\n\nexport default Challenge;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/Challenge/index.tsx"],"names":["React","Container","Grid","ChallengeInfo","Drop","useSelector","Challenge","authentication","state","data","authenticated","challengeName"],"mappings":";AAAA,OAAOA,KAAP,MAA6C,OAA7C;AAEA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,UAAhC;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;AAIA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,SAASC,WAAT,QAA4B,aAA5B;;AAMA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAMC,cAAc,GAAGF,WAAW,CAAEG,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWC,aAA5B,CAAlC;AAEA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,aAAa,gBACZ,uDACE,oBAAC,aAAD;AAAe,IAAA,aAAa,EAAEA,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGJ,cAAc,gBACb,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAEI,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,gBAGb,yCALJ,CADY,gBAUZ,yCAXJ,CADF,CADF;AAkBD,CArBD;;AAuBA,eAAeL,SAAf","sourcesContent":["import React, { useCallback, useState } from 'react'\n\nimport { Container, Grid } from './styles'\n\nimport ChallengeInfo from '../ChallengeInfo'\nimport ChallengeButton from '../ChallengeButton'\n\nimport { useFetch } from 'src/hooks/useFetch'\nimport Drop from '../Drop'\nimport { titleCase } from '../Utils'\nimport { useSelector } from 'react-redux'\n\ninterface Challenge {\n\tname: string;\n}\n\nconst Challenge: React.FC = () => {\n  const authentication = useSelector((state: any) => state.data.authenticated)\n\n  return (\n    <Container>\n      <Grid>\n        {challengeName ? (\n          <>\n            <ChallengeInfo challengeName={challengeName} />\n            {authentication ? (\n              <Drop challengeName={challengeName} />\n            ) : (\n              <></>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n      </Grid>\n    </Container>\n  )\n}\n\nexport default Challenge\n"]},"metadata":{},"sourceType":"module"}