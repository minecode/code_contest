{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/ChallengeButton/index.tsx\";\nimport React from 'react';\nimport { titleCase } from '../Utils';\nimport { Container, HashtagIcon, CheckIcon } from './styles';\nimport { useSelector } from 'react-redux';\n\nconst ChallengeButton = ({\n  challengeName\n}) => {\n  const selectedChallengeName = useSelector(state => state.data.selectedChallenge.name);\n  const challengeList = useSelector(state => state.data.challengeList);\n  return /*#__PURE__*/React.createElement(Container, {\n    className: selectedChallengeName && challengeName.split('/')[0] === selectedChallengeName.split('/')[0].split(' ').join('_') && challengeName.split('/')[1] === selectedChallengeName.split('/')[1].split(' ').join('_') ? 'active' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(HashtagIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), challengeName ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, titleCase(challengeName.split('/')[1])) : /*#__PURE__*/React.createElement(React.Fragment, null)), challengeList && challengeList.filter(element => {\n    return element.challengeId.toUpperCase() === challengeName.split('/')[1].toUpperCase() && element.contestId.toUpperCase() === challengeName.split('/')[0].toUpperCase();\n  }).length > 0 ? /*#__PURE__*/React.createElement(CheckIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n};\n\nexport default ChallengeButton;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/ChallengeButton/index.tsx"],"names":["React","titleCase","Container","HashtagIcon","CheckIcon","useSelector","ChallengeButton","challengeName","selectedChallengeName","state","data","selectedChallenge","name","challengeList","split","join","width","filter","element","challengeId","toUpperCase","contestId","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,SAAjC,QAAkD,UAAlD;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAaA,MAAMC,eAAgC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAC5D,QAAMC,qBAAqB,GAAGH,WAAW,CACpCI,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWC,iBAAX,CAA6BC,IADR,CAAzC;AAGA,QAAMC,aAA0B,GAAGR,WAAW,CACzCI,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWG,aADe,CAA9C;AAIA,sBACI,oBAAC,SAAD;AACI,IAAA,SAAS,EACLL,qBAAqB,IAC7BD,aAAa,CAACO,KAAd,CAAoB,GAApB,EAAyB,CAAzB,MACEN,qBAAqB,CAACM,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoCA,KAApC,CAA0C,GAA1C,EAA+CC,IAA/C,CAAoD,GAApD,CAFM,IAGRR,aAAa,CAACO,KAAd,CAAoB,GAApB,EAAyB,CAAzB,MACEN,qBAAqB,CAACM,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoCA,KAApC,CAA0C,GAA1C,EAA+CC,IAA/C,CAAoD,GAApD,CAJM,GAKM,QALN,GAMM,EARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKT,aAAa,gBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,SAAS,CAACM,aAAa,CAACO,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAD,CAAhB,CADU,gBAGV,yCALR,CADJ,EASKD,aAAa,IAAIA,aAAa,CAACI,MAAd,CAAsBC,OAAD,IAAa;AAChD,WACIA,OAAO,CAACC,WAAR,CAAoBC,WAApB,OAAsCb,aAAa,CAACO,KAAd,CAAoB,GAApB,EAAyB,CAAzB,EAA4BM,WAA5B,EAAtC,IACRF,OAAO,CAACG,SAAR,CAAkBD,WAAlB,OAAoCb,aAAa,CAACO,KAAd,CAAoB,GAApB,EAAyB,CAAzB,EAA4BM,WAA5B,EAFhC;AAIH,GALiB,EAKfE,MALe,GAKN,CALX,gBAMO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANP,gBAQO,yCAjBZ,CAXJ,CADJ;AAkCH,CA1CD;;AA4CA,eAAehB,eAAf","sourcesContent":["import React from 'react'\nimport { titleCase } from '../Utils'\n\nimport { Container, HashtagIcon, CheckIcon } from './styles'\nimport { useSelector } from 'react-redux'\n\nexport interface Props {\n  challengeName: string;\n}\nexport interface Challenge {\n  id: string;\n  userId: string;\n  contestId: string;\n  challengeId: string;\n  score: number;\n}\n\nconst ChallengeButton: React.FC<Props> = ({ challengeName }) => {\n    const selectedChallengeName = useSelector(\n        (state: any) => state.data.selectedChallenge.name\n    )\n    const challengeList: Challenge[] = useSelector(\n        (state: any) => state.data.challengeList\n    )\n\n    return (\n        <Container\n            className={\n                selectedChallengeName &&\n        challengeName.split('/')[0] ===\n          selectedChallengeName.split('/')[0].split(' ').join('_') &&\n        challengeName.split('/')[1] ===\n          selectedChallengeName.split('/')[1].split(' ').join('_')\n                    ? 'active'\n                    : ''\n            }\n        >\n            <div style={{ width: '100%' }}>\n                <div>\n                    <HashtagIcon />\n                    {challengeName ? (\n                        <span>{titleCase(challengeName.split('/')[1])}</span>\n                    ) : (\n                        <></>\n                    )}\n                </div>\n                {challengeList && challengeList.filter((element) => {\n                    return (\n                        element.challengeId.toUpperCase() === challengeName.split('/')[1].toUpperCase() &&\n                element.contestId.toUpperCase() === challengeName.split('/')[0].toUpperCase()\n                    )\n                }).length > 0 ? (\n                        <CheckIcon />\n                    ) : (\n                        <></>\n                    )}\n            </div>\n        </Container>\n    )\n}\n\nexport default ChallengeButton\n"]},"metadata":{},"sourceType":"module"}