{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/UserList/index.tsx\";\nimport React from 'react';\nimport { useFetch } from 'src/hooks/useFetch';\nimport { useSelector } from 'react-redux';\nimport apiDatabase from '../../services/apiDatabase';\nimport { Container, Role, User, Avatar } from './styles';\n\nconst UserRow = ({\n  userId,\n  score\n}) => {\n  const user = apiDatabase.get(`/user/${userId}`);\n  return /*#__PURE__*/React.createElement(User, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: user.imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, userId), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }, score));\n};\n\nconst UserList = () => {\n  const contestChallenge = useSelector(state => state.data);\n  const challengeName = contestChallenge.challenge.name;\n  const {\n    data: initialData\n  } = useFetch('http://localhost:4001/contests/global');\n  const {\n    data\n  } = useFetch(`http://localhost:4001/contests/global/${challengeName}`);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, challengeName ? /*#__PURE__*/React.createElement(Role, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, challengeName.split('/').join(' ').split('_').join(' ')) : /*#__PURE__*/React.createElement(Role, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 98\n    }\n  }, \"Global\"), data && data.length > 0 ? data.map(function (element, i) {\n    return /*#__PURE__*/React.createElement(UserRow, {\n      key: i,\n      userId: element.userId,\n      score: element.score,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }\n    });\n  }) : initialData ? initialData.map(function (element, i) {\n    return /*#__PURE__*/React.createElement(UserRow, {\n      key: i,\n      userId: element.userId,\n      score: element.score,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }\n    });\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n};\n\nexport default UserList;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/UserList/index.tsx"],"names":["React","useFetch","useSelector","apiDatabase","Container","Role","User","Avatar","UserRow","userId","score","user","get","imageUrl","UserList","contestChallenge","state","data","challengeName","challenge","name","initialData","split","join","length","map","element","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,MAAhC,QAA8C,UAA9C;;AAaA,MAAMC,OAAuB,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAuB;AACrD,QAAMC,IAAI,GAAGR,WAAW,CAACS,GAAZ,CAAiB,SAAQH,MAAO,EAAhC,CAAb;AAEA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEE,IAAI,CAACE,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASJ,MAAT,CAHF,eAID;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,KAAP,CAJC,CADF;AASD,CAZD;;AAcA,MAAMI,QAAkB,GAAG,MAAM;AAC/B,QAAMC,gBAAgB,GAAGb,WAAW,CAAEc,KAAD,IAAgBA,KAAK,CAACC,IAAvB,CAApC;AACA,QAAMC,aAAa,GAAGH,gBAAgB,CAACI,SAAjB,CAA2BC,IAAjD;AAEA,QAAM;AAAEH,IAAAA,IAAI,EAAEI;AAAR,MAAwBpB,QAAQ,CAAS,uCAAT,CAAtC;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAWhB,QAAQ,CAAU,yCAAwCiB,aAAc,EAAhE,CAAzB;AAEA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,aAAa,gBAAG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,aAAa,CAACI,KAAd,CAAoB,GAApB,EAAyBC,IAAzB,CAA8B,GAA9B,EAAmCD,KAAnC,CAAyC,GAAzC,EAA8CC,IAA9C,CAAmD,GAAnD,CAAP,CAAH,gBAA4E,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD7F,EAEIN,IAAI,IAAIA,IAAI,CAACO,MAAL,GAAc,CAAtB,GAA0BP,IAAI,CAACQ,GAAL,CAAS,UAAUC,OAAV,EAAmBC,CAAnB,EAAsB;AACzD,wBAAO,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,CAAd;AAAiB,MAAA,MAAM,EAAED,OAAO,CAACjB,MAAjC;AAAyC,MAAA,KAAK,EAAEiB,OAAO,CAAChB,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAF2B,CAA1B,GAGEW,WAAW,GAAGA,WAAW,CAACI,GAAZ,CAAgB,UAAUC,OAAV,EAAmBC,CAAnB,EAAsB;AACpD,wBAAO,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,CAAd;AAAiB,MAAA,MAAM,EAAED,OAAO,CAACjB,MAAjC;AAAyC,MAAA,KAAK,EAAEiB,OAAO,CAAChB,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFe,CAAH,gBAGT,yCARR,CADF;AAaD,CApBD;;AAsBA,eAAeI,QAAf","sourcesContent":["import React from 'react'\nimport { useFetch } from 'src/hooks/useFetch'\nimport { useSelector } from 'react-redux'\n\nimport apiDatabase from '../../services/apiDatabase'\nimport { Container, Role, User, Avatar } from './styles'\n\ninterface User {\n  userId: string;\n  score: number;\n}\n\ninterface UserApi {\n  firstName: string;\n  lastName: string;\n  imageUrl: string\n}\n\nconst UserRow: React.FC<User> = ({ userId, score }) => {\n  const user = apiDatabase.get(`/user/${userId}`)\n\n  return (\n    <User>\n      <Avatar src={user.imageUrl}/>\n\n      <strong>{userId}</strong>\n\t  <span>{score}</span>\n\n    </User>\n  )\n}\n\nconst UserList: React.FC = () => {\n  const contestChallenge = useSelector((state: any) => state.data)\n  const challengeName = contestChallenge.challenge.name\n\n  const { data: initialData } = useFetch<User[]>('http://localhost:4001/contests/global')\n  const { data } = useFetch<User[]>(`http://localhost:4001/contests/global/${challengeName}`)\n\n  return (\n    <Container>\n      { challengeName ? <Role>{challengeName.split('/').join(' ').split('_').join(' ')}</Role> : <Role>Global</Role> }\n      { data && data.length > 0 ? data.map(function (element, i) {\n        return <UserRow key={i} userId={element.userId} score={element.score}/>\n      })\n        : initialData ? initialData.map(function (element, i) {\n          return <UserRow key={i} userId={element.userId} score={element.score}/>\n        })\n          : <></>\n      }\n    </Container>\n  )\n}\n\nexport default UserList\n"]},"metadata":{},"sourceType":"module"}