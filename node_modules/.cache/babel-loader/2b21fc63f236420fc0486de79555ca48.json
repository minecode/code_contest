{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/ChallengeInfo/index.tsx\";\nimport React from 'react';\nimport { ContainerInfo, ContainerDescription, Title, Separator, Info } from './styles';\nimport base64 from 'base-64';\nimport ReactMarkdown from 'react-markdown';\nimport { titleCase } from '../Utils';\nimport { useSelector } from 'react-redux';\n\nconst ChallengeInfo = () => {\n  const data = useSelector(state => state.data);\n  const dataSelectedChallenge = data.selectedChallenge;\n  const challengeName = dataSelectedChallenge.name;\n  const challengeIndex = data.challengeIndex;\n  console.log('ChallengeInfo', dataSelectedChallenge);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ContainerInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, titleCase(challengeName.split('/')[1])), /*#__PURE__*/React.createElement(Separator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ContainerDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, challengeIndex && base64.decode(challengeIndex.content).length > 1 ? /*#__PURE__*/React.createElement(ReactMarkdown, {\n    source: base64.decode(challengeIndex.content),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }) : '')));\n};\n\nexport default ChallengeInfo;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/ChallengeInfo/index.tsx"],"names":["React","ContainerInfo","ContainerDescription","Title","Separator","Info","base64","ReactMarkdown","titleCase","useSelector","ChallengeInfo","data","state","dataSelectedChallenge","selectedChallenge","challengeName","name","challengeIndex","console","log","split","decode","content","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,aADF,EAEEC,oBAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,IALF,QAMO,UANP;AAQA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAMA,MAAMC,aAAuB,GAAG,MAAM;AACpC,QAAMC,IAAI,GAAGF,WAAW,CAAEG,KAAD,IAAgBA,KAAK,CAACD,IAAvB,CAAxB;AACA,QAAME,qBAAqB,GAAGF,IAAI,CAACG,iBAAnC;AACA,QAAMC,aAAa,GAAGF,qBAAqB,CAACG,IAA5C;AACA,QAAMC,cAAc,GAAGN,IAAI,CAACM,cAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,qBAA7B;AAEA,sBACE,uDACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,SAAS,CAACO,aAAa,CAACK,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAD,CADZ,CADF,eAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAOE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,cAAc,IAAIX,MAAM,CAACe,MAAP,CAAcJ,cAAc,CAACK,OAA7B,EAAsCC,MAAtC,GAA+C,CAAjE,gBACG,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEjB,MAAM,CAACe,MAAP,CAAcJ,cAAc,CAACK,OAA7B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAEG,EAHN,CADF,CAPF,CADF;AAiBD,CAxBD;;AA0BA,eAAeZ,aAAf","sourcesContent":["import React from 'react'\n\nimport {\n  ContainerInfo,\n  ContainerDescription,\n  Title,\n  Separator,\n  Info\n} from './styles'\n\nimport base64 from 'base-64'\nimport ReactMarkdown from 'react-markdown'\nimport { titleCase } from '../Utils'\nimport { useSelector } from 'react-redux'\n\nexport interface Props {\n  challengeName?: string;\n}\n\nconst ChallengeInfo: React.FC = () => {\n  const data = useSelector((state: any) => state.data)\n  const dataSelectedChallenge = data.selectedChallenge\n  const challengeName = dataSelectedChallenge.name\n  const challengeIndex = data.challengeIndex\n  console.log('ChallengeInfo', dataSelectedChallenge)\n\n  return (\n    <>\n      <ContainerInfo>\n        <Title>\n          {titleCase(challengeName.split('/')[1] as string)}\n        </Title>\n        <Separator />\n      </ContainerInfo>\n      <ContainerDescription>\n        <Info>\n          {challengeIndex && base64.decode(challengeIndex.content).length > 1\n            ? <ReactMarkdown source={base64.decode(challengeIndex.content)} />\n            : ''}\n        </Info>\n      </ContainerDescription>\n    </>\n  )\n}\n\nexport default ChallengeInfo\n"]},"metadata":{},"sourceType":"module"}