{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/UserList/index.tsx\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport base64 from 'base-64';\nimport { Container, Role, User, Avatar } from './styles';\n\nconst UserRow = ({\n  user,\n  score\n}) => {\n  return /*#__PURE__*/React.createElement(User, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: base64.decode(user.imageUrl),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, user.firstName, \" \", user.lastName), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, score));\n};\n\nconst UserList = () => {\n  const data = useSelector(state => state.data);\n  const dataChallenge = data.challenge;\n  const challengeName = dataChallenge.name;\n  const dataGlobalScore = data.globalScore;\n  const dataListOfUsers = data.listOfUsers;\n  const dataChallengeScore = data.challengeScore;\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, challengeName ? /*#__PURE__*/React.createElement(Role, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 24\n    }\n  }, challengeName.split('/').join(' ').split('_').join(' ')) : /*#__PURE__*/React.createElement(Role, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 97\n    }\n  }, \"Global\"), challengeScore && challengeScore.length > 0 && listOfUsers ? challengeScore.map(function (element, i) {\n    const getUser = listOfUsers.filter(element2 => {\n      return element2.userId === element.userId;\n    });\n    const user = getUser.pop();\n\n    if (user) {\n      return /*#__PURE__*/React.createElement(UserRow, {\n        key: i,\n        user: user,\n        score: element.score,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  }) : globalScore && listOfUsers && !challengeName ? globalScore.map(function (element, i) {\n    const getUser = listOfUsers.filter(element2 => {\n      return element2.userId === element.userId;\n    });\n    const user = getUser.pop();\n\n    if (user) {\n      return /*#__PURE__*/React.createElement(UserRow, {\n        key: i,\n        user: user,\n        score: element.score,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n};\n\nexport default UserList;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/UserList/index.tsx"],"names":["React","useSelector","base64","Container","Role","User","Avatar","UserRow","user","score","decode","imageUrl","firstName","lastName","UserList","data","state","dataChallenge","challenge","challengeName","name","dataGlobalScore","globalScore","dataListOfUsers","listOfUsers","dataChallengeScore","challengeScore","split","join","length","map","element","i","getUser","filter","element2","userId","pop"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport base64 from 'base-64'\n\nimport { Container, Role, User, Avatar } from './styles'\n\ninterface User {\n\tuserId?: string;\n\tuser: UserApi;\n\tscore: number;\n}\n\ninterface UserApi {\n\tuserId: string;\n\tfirstName: string;\n\tlastName: string;\n\timageUrl: string;\n}\n\nconst UserRow: React.FC<User> = ({ user, score }) => {\n  return (\n    <User>\n      <Avatar src={base64.decode(user.imageUrl)} />\n      <strong>{user.firstName} {user.lastName}</strong>\n      <span>{score}</span>\n    </User>\n  )\n}\n\nconst UserList: React.FC = () => {\n  const data = useSelector((state: any) => state.data)\n  const dataChallenge = data.challenge\n  const challengeName = dataChallenge.name\n  const dataGlobalScore = data.globalScore\n  const dataListOfUsers = data.listOfUsers\n  const dataChallengeScore = data.challengeScore\n\n  return (\n    <Container>\n      {challengeName ? <Role>{challengeName.split('/').join(' ').split('_').join(' ')}</Role> : <Role>Global</Role>}\n      {challengeScore && challengeScore.length > 0 && listOfUsers ? (\n        challengeScore.map(function (element, i) {\n          const getUser: UserApi[] = listOfUsers.filter((element2) => {\n            return element2.userId === element.userId\n          })\n          const user = getUser.pop()\n          if (user) {\n            return <UserRow key={i} user={user} score={element.score} />\n          } else {\n            return <></>\n          }\n        })\n      ) : globalScore && listOfUsers && !challengeName ? (\n        globalScore.map(function (element, i) {\n          const getUser: UserApi[] = listOfUsers.filter((element2) => {\n            return element2.userId === element.userId\n          })\n          const user = getUser.pop()\n          if (user) {\n            return <UserRow key={i} user={user} score={element.score} />\n          } else {\n            return <></>\n          }\n        })\n      ) : (\n        <></>\n      )}\n    </Container>\n  )\n}\n\nexport default UserList\n"]},"metadata":{},"sourceType":"module"}