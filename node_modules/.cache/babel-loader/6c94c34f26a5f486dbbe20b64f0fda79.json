{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/UserList/index.tsx\";\nimport React from 'react';\nimport { useFetch } from 'src/hooks/useFetch';\nimport { Container, Role, User, Avatar } from './styles';\n\nconst UserRow = ({\n  nickname,\n  isBot\n}) => {\n  return /*#__PURE__*/React.createElement(User, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: isBot ? 'bot' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, nickname), isBot && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"Bot\"));\n};\n\nconst UserList = () => {\n  const {\n    data\n  } = useFetch('http://localhost:4001/contests/global');\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Role, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Dispon\\xEDvel - 1\"), data ? data.map(function (name, index) {\n    return /*#__PURE__*/React.createElement(UserRow, {\n      nickname: name.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }\n    });\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n};\n\nexport default UserList;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/UserList/index.tsx"],"names":["React","useFetch","Container","Role","User","Avatar","UserRow","nickname","isBot","UserList","data","map","name","index","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,MAAhC,QAA8C,UAA9C;;AAYA,MAAMC,OAA4B,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AAC5D,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEA,KAAK,GAAG,KAAH,GAAW,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASD,QAAT,CAHF,EAKGC,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALZ,CADF;AASD,CAVD;;AAYA,MAAMC,QAAkB,GAAG,MAAM;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAWT,QAAQ,CAAS,uCAAT,CAAzB;AAEA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEIS,IAAI,GAAGA,IAAI,CAACC,GAAL,CAAS,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACvC,wBAAO,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAED,IAAI,CAACE,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFQ,CAAH,gBAGF,yCALN,CADF;AAUD,CAbD;;AAeA,eAAeL,QAAf","sourcesContent":["import React from 'react'\nimport { useFetch } from 'src/hooks/useFetch'\n\nimport { Container, Role, User, Avatar } from './styles'\n\ninterface UserProps {\n\tnickname: string;\n\tisBot?: boolean;\n}\n\ninterface User {\n\tid: string;\n\tscore: number;\n  }\n\nconst UserRow: React.FC<UserProps> = ({ nickname, isBot }) => {\n  return (\n    <User>\n      <Avatar className={isBot ? 'bot' : ''} />\n\n      <strong>{nickname}</strong>\n\n      {isBot && <span>Bot</span>}\n    </User>\n  )\n}\n\nconst UserList: React.FC = () => {\n  const { data } = useFetch<User[]>('http://localhost:4001/contests/global')\n\n  return (\n    <Container>\n      <Role>Dispon√≠vel - 1</Role>\n      { data ? data.map(function (name, index) {\n        return <UserRow nickname={name.id} />\n      })\n        : <></>\n      }\n    </Container>\n  )\n}\n\nexport default UserList\n"]},"metadata":{},"sourceType":"module"}