{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/Drop/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Container, DropFiles, SubmitButton, DropFilesZone } from './styles';\nimport Dropzone from 'react-dropzone';\nimport apiCodeContest from '../../services/apiCodeContest';\nimport { Modal, Spinner, Col, Row } from 'react-bootstrap';\nimport { useFetch } from 'src/hooks/useFetch';\n\nconst Drop = ({\n  challengeName\n}) => {\n  const [fileName, setFileName] = useState('');\n  const [commitId, setCommitId] = useState();\n  const [solution, setSolution] = useState('');\n  const [inProgress, setInProgress] = useState(false);\n  const [sendedFile, setSendedFile] = useState(false);\n  const [show, setShow] = useState(false);\n  const [currentChallengeName, setCurrentChallengeName] = useState('challenge');\n  const [bodyRequest, setBodyRequest] = useState(null);\n  const {\n    data: runs\n  } = useFetch('/actions/runs');\n  const config = {\n    headers: {\n      Authorization: `token ${process.env.REACT_APP_TOKEN}`,\n      Accept: 'application/vnd.github.antiope-preview+json'\n    }\n  };\n\n  if (challengeName && challengeName !== currentChallengeName) {\n    setCurrentChallengeName(challengeName);\n    setFileName('');\n    setBodyRequest(null);\n    setSendedFile(false);\n    setShow(false);\n    setSolution('');\n    setInProgress(false);\n  }\n\n  const handleDrop = acceptedFile => {\n    setSendedFile(false);\n    setFileName(acceptedFile.map(file => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.addEventListener('load', async () => {\n        if (reader) {\n          const result = reader.result.split(',')[1];\n          const bodyRequest = {\n            message: `${challengeName === null || challengeName === void 0 ? void 0 : challengeName.split(' ').join('_')}/user1`,\n            committer: {\n              name: 'minecodebot',\n              email: 'minecode.geral@gmail.com'\n            },\n            content: `${result}`\n          };\n\n          try {\n            const fileAlreadyExist = await apiCodeContest.get(`/contents/challenges/${challengeName === null || challengeName === void 0 ? void 0 : challengeName.split(' ').join('_')}/user1/resolution.py`, config);\n            bodyRequest.sha = `${fileAlreadyExist.data.sha}`;\n          } catch (error) {\n            console.log(error);\n          }\n\n          setBodyRequest(bodyRequest);\n        }\n      }, false);\n      return file.name;\n    }));\n  };\n\n  const submitFile = async bodyRequest => {\n    setSolution('');\n    setInProgress(true);\n    setShow(true);\n    const push = await apiCodeContest.put(`/contents/challenges/${challengeName === null || challengeName === void 0 ? void 0 : challengeName.split(' ').join('_')}/user1/resolution.py`, bodyRequest, config);\n    const commit = push.data.commit.sha;\n    setCommitId(commit);\n  };\n\n  useEffect(() => {\n    // eslint-disable-next-line camelcase\n    if ((runs === null || runs === void 0 ? void 0 : runs.workflow_runs[0].head_commit.id) === commitId) {\n      // eslint-disable-next-line camelcase\n      setSolution(runs === null || runs === void 0 ? void 0 : runs.workflow_runs[0].conclusion);\n      setInProgress(false);\n      setSendedFile(true);\n    } // eslint-disable-next-line camelcase\n\n  }, [runs === null || runs === void 0 ? void 0 : runs.workflow_runs[0].head_commit.id]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, challengeName ? /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: handleDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, ({\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject\n  }) => {\n    return /*#__PURE__*/React.createElement(DropFiles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(DropFilesZone, Object.assign({}, getRootProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, isDragActive ? '📂' : '📁'), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }, fileName ? /*#__PURE__*/React.createElement(React.Fragment, null, fileName) : isDragReject ? /*#__PURE__*/React.createElement(React.Fragment, null, \" Invalid file \") : /*#__PURE__*/React.createElement(React.Fragment, null, \"Drag & drop images, or click to select files\"))), inProgress ? /*#__PURE__*/React.createElement(Modal, {\n      show: show,\n      backdrop: \"static\",\n      keyboard: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, \"Modal title\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 27\n      }\n    }, \"We are testing your solution... Soon as possibel, your pontuation will be upadated!!\")))))) : bodyRequest && !sendedFile ? /*#__PURE__*/React.createElement(SubmitButton, {\n      onClick: () => {\n        submitFile(bodyRequest);\n        setShow(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 50\n      }\n    }, \"Submit\") : sendedFile && solution ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 173\n      }\n    }, solution) : /*#__PURE__*/React.createElement(React.Fragment, null));\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n};\n\nexport default Drop;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/Drop/index.tsx"],"names":["React","useState","useEffect","Container","DropFiles","SubmitButton","DropFilesZone","Dropzone","apiCodeContest","Modal","Spinner","Col","Row","useFetch","Drop","challengeName","fileName","setFileName","commitId","setCommitId","solution","setSolution","inProgress","setInProgress","sendedFile","setSendedFile","show","setShow","currentChallengeName","setCurrentChallengeName","bodyRequest","setBodyRequest","data","runs","config","headers","Authorization","process","env","REACT_APP_TOKEN","Accept","handleDrop","acceptedFile","map","file","reader","FileReader","readAsDataURL","addEventListener","result","split","message","join","committer","name","email","content","fileAlreadyExist","get","sha","error","console","log","submitFile","push","put","commit","workflow_runs","head_commit","id","conclusion","getRootProps","getInputProps","isDragActive","isDragReject"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { Container, DropFiles, SubmitButton, DropFilesZone } from './styles'\nimport Dropzone from 'react-dropzone'\nimport apiCodeContest from '../../services/apiCodeContest'\n\nimport { Modal, Spinner, Col, Row } from 'react-bootstrap'\nimport { useFetch } from 'src/hooks/useFetch'\n\nexport interface Props {\n  challengeName?: string;\n}\ninterface BodyRequest {\n  [key: string]: any\n}\ninterface Push {\n  data: {\n    commit: {\n      sha: string\n    }\n  }\n  id: number\n}\n\ninterface Run {\n  data: {\n    status: string,\n    conclusion: string,\n    // eslint-disable-next-line camelcase\n    head_commit: {\n      id: string\n    },\n    id: number\n  }\n}\n\ninterface Runs {\n  // eslint-disable-next-line camelcase\n  workflow_runs: [\n    Run['data']\n  ],\n  // eslint-disable-next-line camelcase\n  total_count: number\n}\n\nconst Drop: React.FC<Props> = ({ challengeName }) => {\n  const [fileName, setFileName] = useState('')\n  const [commitId, setCommitId] = useState<string>()\n  const [solution, setSolution] = useState<string>('')\n  const [inProgress, setInProgress] = useState(false)\n  const [sendedFile, setSendedFile] = useState(false)\n  const [show, setShow] = useState(false)\n  const [currentChallengeName, setCurrentChallengeName] = useState<string>('challenge')\n  const [bodyRequest, setBodyRequest] = useState <BodyRequest | null >(null)\n\n  const { data: runs } = useFetch<Runs>('/actions/runs')\n\n  const config = {\n    headers: {\n      Authorization: `token ${process.env.REACT_APP_TOKEN}`,\n      Accept: 'application/vnd.github.antiope-preview+json'\n    }\n  }\n\n  if (challengeName && challengeName !== currentChallengeName) {\n    setCurrentChallengeName(challengeName)\n    setFileName('')\n    setBodyRequest(null)\n    setSendedFile(false)\n    setShow(false)\n    setSolution('')\n    setInProgress(false)\n  }\n\n  const handleDrop = (acceptedFile: any) => {\n    setSendedFile(false)\n    setFileName(acceptedFile.map((file: any) => {\n      const reader = new FileReader()\n      reader.readAsDataURL(file)\n      reader.addEventListener('load', async () => {\n        if (reader) {\n          const result = (reader.result as string).split(',')[1]\n\n          const bodyRequest: BodyRequest = {\n            message: `${challengeName?.split(' ').join('_')}/user1`,\n            committer: {\n              name: 'minecodebot',\n              email: 'minecode.geral@gmail.com'\n            },\n            content: `${result}`\n          }\n\n          try {\n            const fileAlreadyExist = await apiCodeContest.get(`/contents/challenges/${challengeName?.split(' ').join('_')}/user1/resolution.py`, config)\n            bodyRequest.sha = `${fileAlreadyExist.data.sha}`\n          } catch (error) {\n            console.log(error)\n          }\n          setBodyRequest(bodyRequest)\n        }\n      }, false)\n      return file.name\n    }))\n  }\n\n  const submitFile = async (bodyRequest: BodyRequest) => {\n    setSolution('')\n    setInProgress(true)\n    setShow(true)\n    const push: Push = await apiCodeContest.put(`/contents/challenges/${challengeName?.split(' ').join('_')}/user1/resolution.py`, bodyRequest, config)\n    const commit = push.data.commit.sha\n    setCommitId(commit)\n  }\n\n  useEffect(() => {\n    // eslint-disable-next-line camelcase\n    if (runs?.workflow_runs[0].head_commit.id === commitId) {\n    // eslint-disable-next-line camelcase\n      setSolution(runs?.workflow_runs[0].conclusion as string)\n      setInProgress(false)\n      setSendedFile(true)\n    }\n    // eslint-disable-next-line camelcase\n  }, [runs?.workflow_runs[0].head_commit.id])\n\n  return (\n    <Container>\n      {challengeName\n        ? <Dropzone\n          onDrop={handleDrop}\n        >\n          {({\n            getRootProps,\n            getInputProps,\n            isDragActive,\n            isDragReject\n          }) => {\n            return (\n              <DropFiles>\n                <DropFilesZone {...getRootProps()}>\n                  <input {...getInputProps()} />\n                  <span>{isDragActive ? '📂' : '📁'}</span>\n                  <p>\n                    {fileName ? <>{fileName}</> : isDragReject ? <> Invalid file </> : <>Drag & drop images, or click to select files</>}\n                  </p>\n                </DropFilesZone>\n\n                {inProgress ? <Modal\n                  show={show}\n                  backdrop=\"static\"\n                  keyboard={false}\n                >\n                  <Modal.Header closeButton>\n                    <Modal.Title>Modal title</Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                    <Container>\n                      <Row>\n                        <Col xs={12} className=\"text-center\">\n                          <Spinner animation=\"border\" />\n                        </Col>\n                        <Col xs={12} className=\"text-center\">\n                          <p>We are testing your solution... Soon as possibel, your pontuation will be upadated!!</p>\n                        </Col>\n                      </Row>\n                    </Container>\n                  </Modal.Body>\n                </Modal>\n                  : bodyRequest && !sendedFile ? <SubmitButton onClick={() => { submitFile(bodyRequest); setShow(false) }}>Submit</SubmitButton> : sendedFile && solution ? <p>{solution}</p> : <></>}\n              </DropFiles>\n            )\n          }}\n        </Dropzone> : <></>\n      }\n    </Container>\n  )\n}\n\nexport default Drop\n"]},"metadata":{},"sourceType":"module"}