{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/Drop/index.tsx\";\nimport React, { useState } from 'react';\nimport { Container, DropFiles, SubmitButton, DropFilesZone } from './styles';\nimport Dropzone from 'react-dropzone';\nimport apiCodeContest from '../../services/apiCodeContest';\nimport { Modal, Spinner, Col, Row } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\n\nconst Drop = () => {\n  const [fileName, setFileName] = useState('');\n  const [solution, setSolution] = useState('');\n  const [inProgress, setInProgress] = useState(false);\n  const [sendedFile, setSendedFile] = useState(false);\n  const [show, setShow] = useState(false);\n  const [currentChallengeName, setCurrentChallengeName] = useState('challenge');\n  const [bodyRequest, setBodyRequest] = useState(null);\n  const challengeName = useSelector(state => state.data.selectedChallenge.name);\n  const dataAuth = useSelector(state => state.data.auth);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const config = {\n    headers: {\n      Authorization: `token ${process.env.REACT_APP_TOKEN}`,\n      Accept: 'application/vnd.github.antiope-preview+json'\n    }\n  };\n\n  if (challengeName && challengeName !== currentChallengeName) {\n    setCurrentChallengeName(challengeName);\n    setFileName('');\n    setBodyRequest(null);\n    setSendedFile(false);\n    setShow(false);\n    setSolution('');\n    setInProgress(false);\n  }\n\n  const handleDrop = acceptedFile => {\n    setSendedFile(false);\n    setFileName(acceptedFile.map(file => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.addEventListener('load', async () => {\n        if (reader) {\n          const result = reader.result.split(',')[1];\n          const bodyRequest = {\n            message: `${challengeName === null || challengeName === void 0 ? void 0 : challengeName.split(' ').join('_')}/${dataAuth.user.id}`,\n            committer: {\n              name: 'minecodebot',\n              email: 'minecode.geral@gmail.com'\n            },\n            content: `${result}`\n          };\n\n          try {\n            const fileAlreadyExist = await apiCodeContest.get(`/contents/contests/${challengeName === null || challengeName === void 0 ? void 0 : challengeName.split(' ').join('_')}/${dataAuth.user.id}/resolution.py`, config);\n            bodyRequest.sha = `${fileAlreadyExist.data.sha}`;\n          } catch (error) {\n            console.log(error);\n          }\n\n          setBodyRequest(bodyRequest);\n        }\n      }, false);\n      return file.name;\n    }));\n  };\n\n  const submitFile = async bodyRequest => {\n    setSolution('');\n    setInProgress(true);\n    await apiCodeContest.put(`/contents/contests/${challengeName === null || challengeName === void 0 ? void 0 : challengeName.split(' ').join('_')}/${dataAuth.user.id}/resolution.py`, bodyRequest, config);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, challengeName ? /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: handleDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, ({\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject\n  }) => {\n    return /*#__PURE__*/React.createElement(DropFiles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DropFilesZone, Object.assign({}, getRootProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    }, isDragActive ? '📂' : '📁'), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 37\n      }\n    }, fileName ? /*#__PURE__*/React.createElement(React.Fragment, null, fileName) : isDragReject ? /*#__PURE__*/React.createElement(React.Fragment, null, \" Invalid file \") : /*#__PURE__*/React.createElement(React.Fragment, null, \"Drag & drop images, or click to select files\"))), inProgress ? /*#__PURE__*/React.createElement(Modal, {\n      show: show,\n      onHide: handleClose,\n      backdrop: \"static\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 41\n      }\n    }, \"Test in progress...\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 53\n      }\n    }, \"We are testing your solution... Soon as possibel, your pontuation will be upadated!!\")))))) : bodyRequest && !sendedFile ? /*#__PURE__*/React.createElement(SubmitButton, {\n      onClick: () => {\n        submitFile(bodyRequest);\n        handleShow();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 68\n      }\n    }, \"Submit\") : sendedFile && solution ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 189\n      }\n    }, solution) : /*#__PURE__*/React.createElement(React.Fragment, null));\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n};\n\nexport default Drop;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/Drop/index.tsx"],"names":["React","useState","Container","DropFiles","SubmitButton","DropFilesZone","Dropzone","apiCodeContest","Modal","Spinner","Col","Row","useSelector","Drop","fileName","setFileName","solution","setSolution","inProgress","setInProgress","sendedFile","setSendedFile","show","setShow","currentChallengeName","setCurrentChallengeName","bodyRequest","setBodyRequest","challengeName","state","data","selectedChallenge","name","dataAuth","auth","handleClose","handleShow","config","headers","Authorization","process","env","REACT_APP_TOKEN","Accept","handleDrop","acceptedFile","map","file","reader","FileReader","readAsDataURL","addEventListener","result","split","message","join","user","id","committer","email","content","fileAlreadyExist","get","sha","error","console","log","submitFile","put","getRootProps","getInputProps","isDragActive","isDragReject"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport { Container, DropFiles, SubmitButton, DropFilesZone } from './styles'\nimport Dropzone from 'react-dropzone'\nimport apiCodeContest from '../../services/apiCodeContest'\n\nimport { Modal, Spinner, Col, Row } from 'react-bootstrap'\nimport { useSelector } from 'react-redux'\n\ninterface BodyRequest {\n  [key: string]: any\n}\ninterface Push {\n  data: {\n    commit: {\n      sha: string\n    }\n  }\n  id: number\n}\n\ninterface Run {\n  data: {\n    status: string,\n    conclusion: string,\n    // eslint-disable-next-line camelcase\n    head_commit: {\n      id: string\n    },\n    id: number\n  }\n}\n\nconst Drop: React.FC = () => {\n    const [fileName, setFileName] = useState('')\n    const [solution, setSolution] = useState<string>('')\n    const [inProgress, setInProgress] = useState(false)\n    const [sendedFile, setSendedFile] = useState(false)\n    const [show, setShow] = useState(false)\n    const [currentChallengeName, setCurrentChallengeName] = useState<string>('challenge')\n    const [bodyRequest, setBodyRequest] = useState <BodyRequest | null >(null)\n    const challengeName = useSelector((state: any) => state.data.selectedChallenge.name)\n    const dataAuth = useSelector((state: any) => state.data.auth)\n\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    const config = {\n        headers: {\n            Authorization: `token ${process.env.REACT_APP_TOKEN}`,\n            Accept: 'application/vnd.github.antiope-preview+json'\n        }\n    }\n\n    if (challengeName && challengeName !== currentChallengeName) {\n        setCurrentChallengeName(challengeName)\n        setFileName('')\n        setBodyRequest(null)\n        setSendedFile(false)\n        setShow(false)\n        setSolution('')\n        setInProgress(false)\n    }\n\n    const handleDrop = (acceptedFile: any) => {\n        setSendedFile(false)\n        setFileName(acceptedFile.map((file: any) => {\n            const reader = new FileReader()\n            reader.readAsDataURL(file)\n            reader.addEventListener('load', async () => {\n                if (reader) {\n                    const result = (reader.result as string).split(',')[1]\n\n                    const bodyRequest: BodyRequest = {\n                        message: `${challengeName?.split(' ').join('_')}/${dataAuth.user.id}`,\n                        committer: {\n                            name: 'minecodebot',\n                            email: 'minecode.geral@gmail.com'\n                        },\n                        content: `${result}`\n                    }\n\n                    try {\n                        const fileAlreadyExist = await apiCodeContest.get(`/contents/contests/${challengeName?.split(' ').join('_')}/${dataAuth.user.id}/resolution.py`, config)\n                        bodyRequest.sha = `${fileAlreadyExist.data.sha}`\n                    } catch (error) {\n                        console.log(error)\n                    }\n                    setBodyRequest(bodyRequest)\n                }\n            }, false)\n            return file.name\n        }))\n    }\n\n    const submitFile = async (bodyRequest: BodyRequest) => {\n        setSolution('')\n        setInProgress(true)\n        await apiCodeContest.put(`/contents/contests/${challengeName?.split(' ').join('_')}/${dataAuth.user.id}/resolution.py`, bodyRequest, config)\n    }\n\n    return (\n        <Container>\n            {challengeName\n                ? <Dropzone\n                    onDrop={handleDrop}\n                >\n                    {({\n                        getRootProps,\n                        getInputProps,\n                        isDragActive,\n                        isDragReject\n                    }) => {\n                        return (\n                            <DropFiles>\n                                <DropFilesZone {...getRootProps()}>\n                                    <input {...getInputProps()} />\n                                    <span>{isDragActive ? '📂' : '📁'}</span>\n                                    <p>\n                                        {fileName ? <>{fileName}</> : isDragReject ? <> Invalid file </> : <>Drag & drop images, or click to select files</>}\n                                    </p>\n                                </DropFilesZone>\n\n                                {inProgress ? <Modal\n                                    show={show}\n                                    onHide={handleClose}\n                                    backdrop=\"static\"\n                                >\n                                    <Modal.Header closeButton>\n                                        <Modal.Title>Test in progress...</Modal.Title>\n                                    </Modal.Header>\n                                    <Modal.Body>\n                                        <Container>\n                                            <Row>\n                                                <Col xs={12} className=\"text-center\">\n                                                    <Spinner animation=\"border\" />\n                                                </Col>\n                                                <Col xs={12} className=\"text-center\">\n                                                    <p>We are testing your solution... Soon as possibel, your pontuation will be upadated!!</p>\n                                                </Col>\n                                            </Row>\n                                        </Container>\n                                    </Modal.Body>\n                                </Modal>\n                                    : bodyRequest && !sendedFile ? <SubmitButton onClick={() => { submitFile(bodyRequest); handleShow() }}>Submit</SubmitButton> : sendedFile && solution ? <p>{solution}</p> : <></>}\n                            </DropFiles>\n                        )\n                    }}\n                </Dropzone> : <></>\n            }\n        </Container>\n    )\n}\n\nexport default Drop\n"]},"metadata":{},"sourceType":"module"}