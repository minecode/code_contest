{"ast":null,"code":"import { createStore } from 'redux';\nconst INITIAL_STATE = {\n  data: {\n    auth: {\n      authenticated: false,\n      user: {\n        id: null,\n        name: null,\n        surname: null,\n        image: null\n      },\n      token: null\n    },\n    selectedChallenge: {\n      name: null\n    },\n    globalScore: null,\n    listOfUsers: null,\n    challengeScore: null,\n    userScore: null,\n    challengeIndex: null,\n    challengeList: null\n  }\n};\n\nfunction globalStore(state, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.data;\n\n    case 'LOGOUT':\n      return action.data;\n\n    case 'CHALLENGE':\n      return action.data;\n\n    default:\n      return INITIAL_STATE;\n  }\n}\n\nconst store = createStore(globalStore);\nexport default store;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/store/index.tsx"],"names":["createStore","INITIAL_STATE","data","auth","authenticated","user","id","name","surname","image","token","selectedChallenge","globalScore","listOfUsers","challengeScore","userScore","challengeIndex","challengeList","globalStore","state","action","type","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,aAAa,EAAE,KADb;AAEFC,MAAAA,IAAI,EAAE;AACFC,QAAAA,EAAE,EAAE,IADF;AAEFC,QAAAA,IAAI,EAAE,IAFJ;AAGFC,QAAAA,OAAO,EAAE,IAHP;AAIFC,QAAAA,KAAK,EAAE;AAJL,OAFJ;AAQFC,MAAAA,KAAK,EAAE;AARL,KADJ;AAWFC,IAAAA,iBAAiB,EAAE;AACfJ,MAAAA,IAAI,EAAE;AADS,KAXjB;AAcFK,IAAAA,WAAW,EAAE,IAdX;AAeFC,IAAAA,WAAW,EAAE,IAfX;AAgBFC,IAAAA,cAAc,EAAE,IAhBd;AAiBFC,IAAAA,SAAS,EAAE,IAjBT;AAkBFC,IAAAA,cAAc,EAAE,IAlBd;AAmBFC,IAAAA,aAAa,EAAE;AAnBb;AADY,CAAtB;;AAwBA,SAASC,WAAT,CAAsBC,KAAtB,EAAkCC,MAAlC,EAA+C;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACA,SAAK,OAAL;AACI,aAAOD,MAAM,CAAClB,IAAd;;AACJ,SAAK,QAAL;AACI,aAAOkB,MAAM,CAAClB,IAAd;;AACJ,SAAK,WAAL;AACI,aAAOkB,MAAM,CAAClB,IAAd;;AACJ;AACI,aAAOD,aAAP;AARJ;AAUH;;AAED,MAAMqB,KAAK,GAAGtB,WAAW,CAACkB,WAAD,CAAzB;AAEA,eAAeI,KAAf","sourcesContent":["import { createStore } from 'redux'\n\nconst INITIAL_STATE = {\n    data: {\n        auth: {\n            authenticated: false,\n            user: {\n                id: null,\n                name: null,\n                surname: null,\n                image: null\n            },\n            token: null\n        },\n        selectedChallenge: {\n            name: null\n        },\n        globalScore: null,\n        listOfUsers: null,\n        challengeScore: null,\n        userScore: null,\n        challengeIndex: null,\n        challengeList: null\n    }\n}\n\nfunction globalStore (state: any, action: any) {\n    switch (action.type) {\n    case 'LOGIN':\n        return action.data\n    case 'LOGOUT':\n        return action.data\n    case 'CHALLENGE':\n        return action.data\n    default:\n        return INITIAL_STATE\n    }\n}\n\nconst store = createStore(globalStore)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}