{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/Authentication/index.tsx\";\nimport React from 'react';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport { useDispatch, useSelector } from 'react-redux';\nimport base64 from 'base-64';\nimport apiDatabase from '../../services/apiDatabase';\nimport { Auth, BtnGoogle } from './styles';\n\nconst Authentication = () => {\n  const data = useSelector(state => state.data);\n  const authentication = useSelector(state => state.data.auth.authenticated);\n  const dispatch = useDispatch();\n\n  const login = async response => {\n    const newData = {\n      data: data\n    };\n    newData.data.auth = {\n      authenticated: true,\n      user: {\n        id: response.googleId,\n        name: response.profileObj.givenName,\n        surname: response.profileObj.familyName,\n        image: response.profileObj.imageUrl\n      },\n      token: response.tokenId\n    };\n    await apiDatabase.post(`/user/${response.googleId}/${response.profileObj.givenName}/${response.profileObj.familyName}/${base64.encode(response.profileObj.imageUrl)}`);\n    dispatch({\n      type: 'LOGIN',\n      data: newData\n    });\n  };\n\n  const badResponseGoogle = response => {\n    console.log(response);\n    dispatch({\n      type: 'BAD_RESPONSE',\n      data: null\n    });\n  };\n\n  const logout = () => {\n    const newData = {\n      data: data\n    };\n    newData.data.auth = {\n      authenticated: false,\n      user: {\n        id: null,\n        name: null,\n        surname: null,\n        image: null\n      },\n      token: null\n    };\n    dispatch({\n      type: 'LOGOUT',\n      data: newData\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Auth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, authentication ? /*#__PURE__*/React.createElement(GoogleLogout, {\n    clientId: \"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\",\n    buttonText: \"Logout\",\n    onLogoutSuccess: logout,\n    className: \"BtnGoogle\",\n    render: renderProps => /*#__PURE__*/React.createElement(BtnGoogle, {\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, \"Logout\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\",\n    buttonText: \"Login\",\n    onSuccess: login,\n    onFailure: badResponseGoogle,\n    cookiePolicy: 'single_host_origin',\n    isSignedIn: true,\n    render: renderProps => /*#__PURE__*/React.createElement(BtnGoogle, {\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, \"Sign In w/ Google\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default Authentication;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/Authentication/index.tsx"],"names":["React","GoogleLogin","GoogleLogout","useDispatch","useSelector","base64","apiDatabase","Auth","BtnGoogle","Authentication","data","state","authentication","auth","authenticated","dispatch","login","response","newData","user","id","googleId","name","profileObj","givenName","surname","familyName","image","imageUrl","token","tokenId","post","encode","type","badResponseGoogle","console","log","logout","renderProps","onClick","disabled"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { GoogleLogin, GoogleLogout } from 'react-google-login'\nimport { useDispatch, useSelector } from 'react-redux'\nimport base64 from 'base-64'\nimport apiDatabase from '../../services/apiDatabase'\n\nimport { Auth, BtnGoogle } from './styles'\n\nconst Authentication: React.FC = () => {\n    const data = useSelector((state: any) => state.data)\n    const authentication = useSelector((state: any) => state.data.auth.authenticated)\n\n    const dispatch = useDispatch()\n\n    const login = async (response: any) => {\n        const newData = { data: data }\n        newData.data.auth = {\n            authenticated: true,\n            user: {\n                id: response.googleId,\n                name: response.profileObj.givenName,\n                surname: response.profileObj.familyName,\n                image: response.profileObj.imageUrl\n            },\n            token: response.tokenId\n        }\n        await apiDatabase.post(`/user/${response.googleId}/${response.profileObj.givenName}/${response.profileObj.familyName}/${base64.encode(response.profileObj.imageUrl)}`)\n        dispatch({ type: 'LOGIN', data: newData })\n    }\n\n    const badResponseGoogle = (response: any) => {\n        console.log(response)\n        dispatch({ type: 'BAD_RESPONSE', data: null })\n    }\n\n    const logout = () => {\n        const newData = { data: data }\n        newData.data.auth = {\n            authenticated: false,\n            user: {\n                id: null,\n                name: null,\n                surname: null,\n                image: null\n            },\n            token: null\n        }\n        dispatch({ type: 'LOGOUT', data: newData })\n    }\n\n    return (\n        <Auth>\n            {authentication ? (\n                <GoogleLogout\n                    clientId='156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com'\n                    buttonText='Logout'\n                    onLogoutSuccess={logout}\n                    className=\"BtnGoogle\"\n                    render={renderProps => (\n                        <BtnGoogle onClick={renderProps.onClick} disabled={renderProps.disabled}>Logout</BtnGoogle>\n                    )}\n                ></GoogleLogout>\n            ) : (\n                <GoogleLogin\n                    clientId='156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com'\n                    buttonText='Login'\n                    onSuccess={login}\n                    onFailure={badResponseGoogle}\n                    cookiePolicy={'single_host_origin'}\n                    isSignedIn={true}\n                    render={renderProps => (\n                        <BtnGoogle onClick={renderProps.onClick} disabled={renderProps.disabled}>Sign In w/ Google</BtnGoogle>\n                    )}\n                />\n            )}\n        </Auth>\n    )\n}\n\nexport default Authentication\n"]},"metadata":{},"sourceType":"module"}