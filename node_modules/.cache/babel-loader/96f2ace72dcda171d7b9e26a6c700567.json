{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/Authentication/index.tsx\";\nimport React from 'react';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Auth } from './styles';\n\nconst Authentication = () => {\n  const authentication = useSelector(state => state.data.authenticated);\n  const dispatch = useDispatch();\n\n  const login = response => {\n    const new_state = {\n      data: {\n        authenticated: true,\n        user: {\n          id: response.googleId,\n          name: response.profileObj.givenName,\n          surname: response.profileObj.familyName,\n          image: response.profileObj.ImageUrl\n        },\n        token: response.tokenId\n      }\n    };\n    dispatch({\n      type: 'LOGIN',\n      data: new_state\n    });\n  };\n\n  const badResponseGoogle = response => {\n    console.log(response);\n    dispatch({\n      type: 'BAD_RESPONSE'\n    });\n  };\n\n  const logout = () => {\n    console.log('start logout');\n    dispatch({\n      type: 'LOGOUT'\n    });\n    console.log('end logout');\n  };\n\n  return /*#__PURE__*/React.createElement(Auth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, authentication ? /*#__PURE__*/React.createElement(GoogleLogout, {\n    clientId: \"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\",\n    buttonText: \"Logout\",\n    onLogoutSuccess: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\",\n    buttonText: \"Login\",\n    onSuccess: login,\n    onFailure: badResponseGoogle,\n    cookiePolicy: 'single_host_origin',\n    isSignedIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Authentication;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/Authentication/index.tsx"],"names":["React","GoogleLogin","GoogleLogout","useDispatch","useSelector","Auth","Authentication","authentication","state","data","authenticated","dispatch","login","response","new_state","user","id","googleId","name","profileObj","givenName","surname","familyName","image","ImageUrl","token","tokenId","type","badResponseGoogle","console","log","logout"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,oBAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,IAAT,QAAqB,UAArB;;AAEA,MAAMC,cAAwB,GAAG,MAAM;AACrC,QAAMC,cAAc,GAAGH,WAAW,CAAEI,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWC,aAA5B,CAAlC;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,KAAK,GAAIC,QAAD,IAAmB;AAC/B,UAAMC,SAAS,GAAG;AAChBL,MAAAA,IAAI,EAAE;AACJC,QAAAA,aAAa,EAAE,IADX;AAEJK,QAAAA,IAAI,EAAE;AACJC,UAAAA,EAAE,EAAEH,QAAQ,CAACI,QADT;AAEJC,UAAAA,IAAI,EAAEL,QAAQ,CAACM,UAAT,CAAoBC,SAFtB;AAGJC,UAAAA,OAAO,EAAER,QAAQ,CAACM,UAAT,CAAoBG,UAHzB;AAIJC,UAAAA,KAAK,EAAEV,QAAQ,CAACM,UAAT,CAAoBK;AAJvB,SAFF;AAQJC,QAAAA,KAAK,EAAEZ,QAAQ,CAACa;AARZ;AADU,KAAlB;AAYAf,IAAAA,QAAQ,CAAC;AAAEgB,MAAAA,IAAI,EAAE,OAAR;AAAiBlB,MAAAA,IAAI,EAAEK;AAAvB,KAAD,CAAR;AACD,GAdD;;AAgBA,QAAMc,iBAAiB,GAAIf,QAAD,IAAmB;AAC3CgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;AACAF,IAAAA,QAAQ,CAAC;AAAEgB,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAHD;;AAKA,QAAMI,MAAM,GAAG,MAAM;AACnBF,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAnB,IAAAA,QAAQ,CAAC;AAAEgB,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAJD;;AAMA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,cAAc,gBACb,oBAAC,YAAD;AACE,IAAA,QAAQ,EAAC,0EADX;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,eAAe,EAAEwB,MAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,gBAOb,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAC,0EADX;AAEE,IAAA,UAAU,EAAC,OAFb;AAGE,IAAA,SAAS,EAAEnB,KAHb;AAIE,IAAA,SAAS,EAAEgB,iBAJb;AAKE,IAAA,YAAY,EAAE,oBALhB;AAME,IAAA,UAAU,EAAE,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADF;AAoBD,CAnDD;;AAqDA,eAAetB,cAAf","sourcesContent":["import React from 'react'\n\nimport { GoogleLogin, GoogleLogout } from 'react-google-login'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Auth } from './styles'\n\nconst Authentication: React.FC = () => {\n  const authentication = useSelector((state: any) => state.data.authenticated)\n  const dispatch = useDispatch()\n\n  const login = (response: any) => {\n    const new_state = {\n      data: {\n        authenticated: true,\n        user: {\n          id: response.googleId,\n          name: response.profileObj.givenName,\n          surname: response.profileObj.familyName,\n          image: response.profileObj.ImageUrl\n        },\n        token: response.tokenId\n      }\n    }\n    dispatch({ type: 'LOGIN', data: new_state })\n  }\n\n  const badResponseGoogle = (response: any) => {\n    console.log(response)\n    dispatch({ type: 'BAD_RESPONSE' })\n  }\n\n  const logout = () => {\n    console.log('start logout')\n    dispatch({ type: 'LOGOUT' })\n    console.log('end logout')\n  }\n\n  return (\n    <Auth>\n      {authentication ? (\n        <GoogleLogout\n          clientId='156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com'\n          buttonText='Logout'\n          onLogoutSuccess={logout}\n        ></GoogleLogout>\n      ) : (\n        <GoogleLogin\n          clientId='156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com'\n          buttonText='Login'\n          onSuccess={login}\n          onFailure={badResponseGoogle}\n          cookiePolicy={'single_host_origin'}\n          isSignedIn={true}\n        />\n      )}\n    </Auth>\n  )\n}\n\nexport default Authentication\n"]},"metadata":{},"sourceType":"module"}