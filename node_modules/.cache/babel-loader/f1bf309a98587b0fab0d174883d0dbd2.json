{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/Navbar/index.tsx\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFetch } from 'src/hooks/useFetch';\nimport Authentication from '../Authentication';\nimport { Container, Avatar, UserInfo, Auth } from './styles';\n\nconst Navbar = () => {\n  const dispatch = useDispatch();\n  const dataAuth = useSelector(state => state.data.auth);\n  const userId = useSelector(state => state.data.auth.user.id);\n  const challengeName = useSelector(state => state.data.selectedChallenge.name);\n  const {\n    data: globalScore\n  } = useFetch('http://localhost:4001/contests/global');\n  const {\n    data: listOfUsers\n  } = useFetch('http://localhost:4001/contests/user');\n  const {\n    data: challengeScore\n  } = useFetch(`http://localhost:4001/contests/global/${challengeName}`);\n  const {\n    data: userScore\n  } = useFetch(`http://localhost:4001/contests/${userId}/${challengeName}`);\n  const {\n    data: challengeIndex\n  } = useFetch(`/contents/contests/${challengeName === null || challengeName === void 0 ? void 0 : challengeName.split(' ').join('_')}/index.md`);\n  useEffect(() => {\n    const newData = {\n      data: data\n    };\n    newData.data.globalScore = globalScore || null;\n    newData.data.listOfUsers = listOfUsers || null;\n    newData.data.challengeScore = challengeScore || null;\n    newData.data.userScore = userScore || null;\n    newData.data.challengeIndex = challengeIndex || null;\n    console.log('navbar dispatch', newData);\n    dispatch({\n      type: 'CHALLENGE',\n      data: newData\n    });\n    console.log('navbar dispatch2', newData);\n  }, [globalScore, listOfUsers, challengeScore, userScore, challengeIndex, dispatch]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, dataAuth.authenticated ? /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Welcome, \", dataAuth.user.name, \"!\"), /*#__PURE__*/React.createElement(Avatar, {\n    src: dataAuth.user.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Auth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Authentication, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/Navbar/index.tsx"],"names":["React","useEffect","useDispatch","useSelector","useFetch","Authentication","Container","Avatar","UserInfo","Auth","Navbar","dispatch","dataAuth","state","data","auth","userId","user","id","challengeName","selectedChallenge","name","globalScore","listOfUsers","challengeScore","userScore","challengeIndex","split","join","newData","console","log","type","authenticated","image"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useFetch } from 'src/hooks/useFetch'\n\nimport Authentication from '../Authentication'\nimport { Container, Avatar, UserInfo, Auth } from './styles'\n\ninterface User {\n\tuserId?: string;\n\tuser: UserApi;\n\tscore: number;\n}\n\ninterface UserApi {\n\tuserId: string;\n\tfirstName: string;\n\tlastName: string;\n\timageUrl: string;\n}\n\ninterface Challenge {\n  name: string;\n  content: string;\n}\n\nconst Navbar: React.FC = () => {\n  const dispatch = useDispatch()\n  const dataAuth = useSelector((state: any) => state.data.auth)\n  const userId = useSelector((state: any) => state.data.auth.user.id)\n  const challengeName = useSelector((state: any) => state.data.selectedChallenge.name)\n\n  const { data: globalScore } = useFetch<User[]>('http://localhost:4001/contests/global')\n  const { data: listOfUsers } = useFetch<UserApi[]>('http://localhost:4001/contests/user')\n  const { data: challengeScore } = useFetch<User[]>(`http://localhost:4001/contests/global/${challengeName}`)\n  const { data: userScore } = useFetch<User[]>(`http://localhost:4001/contests/${userId}/${challengeName}`)\n  const { data: challengeIndex } = useFetch<Challenge>(`/contents/contests/${challengeName?.split(' ').join('_')}/index.md`)\n\n  useEffect(() => {\n    const newData = { data: data }\n\n    newData.data.globalScore = globalScore || null\n    newData.data.listOfUsers = listOfUsers || null\n    newData.data.challengeScore = challengeScore || null\n    newData.data.userScore = userScore || null\n    newData.data.challengeIndex = challengeIndex || null\n\n    console.log('navbar dispatch', newData)\n    dispatch({ type: 'CHALLENGE', data: newData })\n    console.log('navbar dispatch2', newData)\n  }, [globalScore, listOfUsers, challengeScore, userScore, challengeIndex, dispatch])\n\n  return (\n    <Container>\n      {dataAuth.authenticated ? (\n        <UserInfo>\n          <span>Welcome, {dataAuth.user.name}!</span>\n          <Avatar src={dataAuth.user.image} />\n        </UserInfo>\n      ) : (\n        <></>\n      )}\n      <Auth>\n        <Authentication />\n      </Auth>\n    </Container>\n  )\n}\n\nexport default Navbar\n"]},"metadata":{},"sourceType":"module"}