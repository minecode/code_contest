{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/Drop/index.tsx\";\nimport React, { useState } from 'react';\nimport { Container, DropFiles, SubmitButton, DropFilesZone } from './styles';\nimport Dropzone from 'react-dropzone';\nimport apiCodeContest from '../../services/apiCodeContest';\nimport { useFetch } from 'src/hooks/useFetch';\nimport { Modal, Spinner, Col, Row } from 'react-bootstrap';\n\nconst Drop = ({\n  challengeName\n}) => {\n  const [fileName, setFileName] = useState('');\n  const [solution, setSolution] = useState('');\n  const [inProgress, setInProgress] = useState(false);\n  const [sendedFile, setSendedFile] = useState(false);\n  const [commit, setCommit] = useState();\n  const [currentChallengeName, setCurrentChallengeName] = useState('challenge');\n  const [bodyRequest, setBodyRequest] = useState(null);\n  const [runId, setRunId] = useState();\n  const [show, setShow] = useState(false);\n  const {\n    data: runs\n  } = useFetch('/actions/runs');\n  const {\n    data: run\n  } = useFetch(`/actions/runs/${runId}`);\n\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  const config = {\n    headers: {\n      Authorization: `token ${process.env.REACT_APP_TOKEN}`,\n      Accept: 'application/vnd.github.antiope-preview+json'\n    }\n  };\n\n  if (challengeName && challengeName !== currentChallengeName) {\n    setCurrentChallengeName(challengeName);\n    setShow(false);\n    setFileName('');\n    setBodyRequest(null);\n    setSendedFile(false);\n    setSolution('');\n    setInProgress(false);\n  }\n\n  const handleDrop = acceptedFile => {\n    setSendedFile(false);\n    setFileName(acceptedFile.map(file => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.addEventListener('load', async () => {\n        if (reader) {\n          const result = reader.result.split(',')[1];\n          const bodyRequest = {\n            message: `${challengeName === null || challengeName === void 0 ? void 0 : challengeName.split(' ').join('_')}/user1`,\n            committer: {\n              name: 'minecodebot',\n              email: 'minecode.geral@gmail.com'\n            },\n            content: `${result}`\n          };\n\n          try {\n            const fileAlreadyExist = await apiCodeContest.get(`/contents/challenges/${challengeName === null || challengeName === void 0 ? void 0 : challengeName.split(' ').join('_')}/user1/resolution.py`, config);\n            bodyRequest.sha = `${fileAlreadyExist.data.sha}`;\n          } catch (error) {\n            console.log(error);\n          }\n\n          setBodyRequest(bodyRequest);\n        }\n      }, false);\n      return file.name;\n    }));\n  };\n\n  const submitFile = async bodyRequest => {\n    setSolution('');\n    setInProgress(true);\n    const push = await apiCodeContest.put(`/contents/challenges/${challengeName === null || challengeName === void 0 ? void 0 : challengeName.split(' ').join('_')}/user1/resolution.py`, bodyRequest, config);\n    setCommit(push.data.commit.sha);\n    console.log(commit);\n    let commitId = false;\n\n    while (!commitId) {\n      // eslint-disable-next-line camelcase\n      (runs === null || runs === void 0 ? void 0 : runs.workflow_runs[0].head_commit.id) !== commit ? await sleep(3000).then(() => console.log(runs === null || runs === void 0 ? void 0 : runs.workflow_runs[0].head_commit.id)) : commitId = true;\n    }\n  };\n\n  const success = () => {\n    setRunId(commit);\n    setSolution(run === null || run === void 0 ? void 0 : run.data.conclusion);\n    setInProgress(false);\n    setShow(false);\n    setSendedFile(true);\n    return 'hello';\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, challengeName ? /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: handleDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, ({\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject\n  }) => {\n    return /*#__PURE__*/React.createElement(DropFiles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(DropFilesZone, Object.assign({}, getRootProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, isDragActive ? '📂' : '📁'), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }, fileName ? /*#__PURE__*/React.createElement(React.Fragment, null, fileName) : isDragReject ? /*#__PURE__*/React.createElement(React.Fragment, null, \" Invalid file \") : /*#__PURE__*/React.createElement(React.Fragment, null, \"Drag & drop images, or click to select files\"))), inProgress ? /*#__PURE__*/React.createElement(Modal, {\n      show: show,\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      className: \"show-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 27\n      }\n    }, \"Testing your solution... Wait a moment, please!\")))))) : bodyRequest && !sendedFile ? /*#__PURE__*/React.createElement(SubmitButton, {\n      onClick: () => {\n        submitFile(bodyRequest);\n        setShow(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 57\n      }\n    }, \"Submit\") : sendedFile && solution ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 179\n      }\n    }, solution) : /*#__PURE__*/React.createElement(React.Fragment, null));\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n};\n\nexport default Drop;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/Drop/index.tsx"],"names":["React","useState","Container","DropFiles","SubmitButton","DropFilesZone","Dropzone","apiCodeContest","useFetch","Modal","Spinner","Col","Row","Drop","challengeName","fileName","setFileName","solution","setSolution","inProgress","setInProgress","sendedFile","setSendedFile","commit","setCommit","currentChallengeName","setCurrentChallengeName","bodyRequest","setBodyRequest","runId","setRunId","show","setShow","data","runs","run","sleep","ms","Promise","resolve","setTimeout","config","headers","Authorization","process","env","REACT_APP_TOKEN","Accept","handleDrop","acceptedFile","map","file","reader","FileReader","readAsDataURL","addEventListener","result","split","message","join","committer","name","email","content","fileAlreadyExist","get","sha","error","console","log","submitFile","push","put","commitId","workflow_runs","head_commit","id","then","success","conclusion","getRootProps","getInputProps","isDragActive","isDragReject"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport { Container, DropFiles, SubmitButton, DropFilesZone } from './styles'\nimport Dropzone from 'react-dropzone'\nimport apiCodeContest from '../../services/apiCodeContest'\nimport { useFetch } from 'src/hooks/useFetch'\n\nimport { Modal, Spinner, Col, Row } from 'react-bootstrap'\n\nexport interface Props {\n  challengeName?: string;\n}\ninterface BodyRequest {\n  [key: string]: any\n}\ninterface Push {\n  data: {\n    commit: {\n      sha: string\n    }\n  }\n  id: number\n}\n\ninterface Run {\n  data: {\n    status: string,\n    conclusion: string,\n    // eslint-disable-next-line camelcase\n    head_commit: {\n      id: string\n    },\n    id: number\n  }\n}\n\ninterface Runs {\n  // eslint-disable-next-line camelcase\n  workflow_runs: [\n    Run['data']\n  ],\n  // eslint-disable-next-line camelcase\n  total_count: number\n}\n\nconst Drop: React.FC<Props> = ({ challengeName }) => {\n  const [fileName, setFileName] = useState('')\n  const [solution, setSolution] = useState<string>('')\n  const [inProgress, setInProgress] = useState(false)\n  const [sendedFile, setSendedFile] = useState(false)\n  const [commit, setCommit] = useState<string>()\n  const [currentChallengeName, setCurrentChallengeName] = useState<string>('challenge')\n  const [bodyRequest, setBodyRequest] = useState <BodyRequest | null >(null)\n  const [runId, setRunId] = useState<string>()\n\n  const [show, setShow] = useState(false)\n\n  const { data: runs } = useFetch<Runs>('/actions/runs')\n  const { data: run } = useFetch<Run>(`/actions/runs/${runId}`)\n\n  function sleep (ms: any) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n  }\n\n  const config = {\n    headers: {\n      Authorization: `token ${process.env.REACT_APP_TOKEN}`,\n      Accept: 'application/vnd.github.antiope-preview+json'\n    }\n  }\n\n  if (challengeName && challengeName !== currentChallengeName) {\n    setCurrentChallengeName(challengeName)\n    setShow(false)\n    setFileName('')\n    setBodyRequest(null)\n    setSendedFile(false)\n    setSolution('')\n    setInProgress(false)\n  }\n\n  const handleDrop = (acceptedFile: any) => {\n    setSendedFile(false)\n    setFileName(acceptedFile.map((file: any) => {\n      const reader = new FileReader()\n      reader.readAsDataURL(file)\n      reader.addEventListener('load', async () => {\n        if (reader) {\n          const result = (reader.result as string).split(',')[1]\n\n          const bodyRequest: BodyRequest = {\n            message: `${challengeName?.split(' ').join('_')}/user1`,\n            committer: {\n              name: 'minecodebot',\n              email: 'minecode.geral@gmail.com'\n            },\n            content: `${result}`\n          }\n\n          try {\n            const fileAlreadyExist = await apiCodeContest.get(`/contents/challenges/${challengeName?.split(' ').join('_')}/user1/resolution.py`, config)\n            bodyRequest.sha = `${fileAlreadyExist.data.sha}`\n          } catch (error) {\n            console.log(error)\n          }\n          setBodyRequest(bodyRequest)\n        }\n      }, false)\n      return file.name\n    }))\n  }\n\n  const submitFile = async (bodyRequest: BodyRequest) => {\n    setSolution('')\n    setInProgress(true)\n    const push: Push = await apiCodeContest.put(`/contents/challenges/${challengeName?.split(' ').join('_')}/user1/resolution.py`, bodyRequest, config)\n    setCommit(push.data.commit.sha)\n    console.log(commit)\n    let commitId = false\n    while (!commitId) {\n      // eslint-disable-next-line camelcase\n      runs?.workflow_runs[0].head_commit.id !== commit ? await sleep(3000).then(() => console.log(runs?.workflow_runs[0].head_commit.id)) : commitId = true\n    }\n  }\n\n  const success = () => {\n    setRunId(commit)\n    setSolution(run?.data.conclusion as string)\n    setInProgress(false)\n    setShow(false)\n    setSendedFile(true)\n    return 'hello'\n  }\n\n  return (\n    <Container>\n      {challengeName\n        ? <Dropzone\n          onDrop={handleDrop}\n        >\n          {({\n            getRootProps,\n            getInputProps,\n            isDragActive,\n            isDragReject\n          }) => {\n            return (\n              <DropFiles>\n                <DropFilesZone {...getRootProps()}>\n                  <input {...getInputProps()} />\n                  <span>{isDragActive ? '📂' : '📁'}</span>\n                  <p>\n                    {fileName ? <>{fileName}</> : isDragReject ? <> Invalid file </> : <>Drag & drop images, or click to select files</>}\n                  </p>\n                </DropFilesZone>\n\n                {inProgress ? <Modal show={show} centered>\n                  <Modal.Body className=\"show-grid\">\n                    <Container>\n                      <Row>\n                        <Col xs={12} className=\"text-center\">\n                          <Spinner animation=\"border\" />\n                        </Col>\n                        <Col xs={12} className=\"text-center\">\n                          <p>Testing your solution... Wait a moment, please!</p>\n                        </Col>\n                      </Row>\n                    </Container>\n                  </Modal.Body>\n                </Modal> : bodyRequest && !sendedFile ? <SubmitButton onClick={() => { submitFile(bodyRequest); setShow(true) }}>Submit</SubmitButton> : sendedFile && solution ? <p>{solution}</p> : <></>}\n              </DropFiles>\n            )\n          }}\n        </Dropzone> : <></>\n      }\n    </Container>\n  )\n}\n\nexport default Drop\n"]},"metadata":{},"sourceType":"module"}