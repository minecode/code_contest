{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/ChallengeInfo/index.tsx\";\nimport React from 'react';\nimport { useFetch } from 'src/hooks/useFetch';\nimport { ContainerInfo, ContainerDescription, Title, Separator, Info } from './styles';\nimport base64 from 'base-64';\nimport ReactMarkdown from 'react-markdown';\nimport { titleCase } from '../Utils';\nimport { useSelector } from 'react-redux';\n\nconst ChallengeInfo = () => {\n  const challengeName = useSelector(state => state.data.challenge.name);\n  const {\n    data\n  } = useFetch(`/contents/contests/challenges/${challengeName === null || challengeName === void 0 ? void 0 : challengeName.split(' ').join('_')}/index.md`);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ContainerInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, titleCase(challengeName)), /*#__PURE__*/React.createElement(Separator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ContainerDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, data && base64.decode(data.content).length > 1 ? /*#__PURE__*/React.createElement(ReactMarkdown, {\n    source: base64.decode(data.content),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }) : '')));\n};\n\nexport default ChallengeInfo;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/ChallengeInfo/index.tsx"],"names":["React","useFetch","ContainerInfo","ContainerDescription","Title","Separator","Info","base64","ReactMarkdown","titleCase","useSelector","ChallengeInfo","challengeName","state","data","challenge","name","split","join","decode","content","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,SACEC,aADF,EAEEC,oBAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,IALF,QAMO,UANP;AAQA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAWA,MAAMC,aAAuB,GAAG,MAAM;AACpC,QAAMC,aAAa,GAAGF,WAAW,CAAEG,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWC,SAAX,CAAqBC,IAAtC,CAAjC;AACA,QAAM;AAAEF,IAAAA;AAAF,MAAWb,QAAQ,CACtB,iCAAgCW,aAAjC,aAAiCA,aAAjC,uBAAiCA,aAAa,CAAEK,KAAf,CAAqB,GAArB,EAA0BC,IAA1B,CAA+B,GAA/B,CAAoC,WAD9C,CAAzB;AAIA,sBACE,uDACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,SAAS,CAACG,aAAD,CADZ,CADF,eAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAOE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IAAI,IAAIP,MAAM,CAACY,MAAP,CAAcL,IAAI,CAACM,OAAnB,EAA4BC,MAA5B,GAAqC,CAA7C,gBACG,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEd,MAAM,CAACY,MAAP,CAAcL,IAAI,CAACM,OAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAEG,EAHN,CADF,CAPF,CADF;AAiBD,CAvBD;;AAyBA,eAAeT,aAAf","sourcesContent":["import React from 'react'\n\nimport { useFetch } from 'src/hooks/useFetch'\n\nimport {\n  ContainerInfo,\n  ContainerDescription,\n  Title,\n  Separator,\n  Info\n} from './styles'\n\nimport base64 from 'base-64'\nimport ReactMarkdown from 'react-markdown'\nimport { titleCase } from '../Utils'\nimport { useSelector } from 'react-redux'\n\nexport interface Props {\n  challengeName?: string;\n}\n\ninterface Challenge {\n  name: string;\n  content: string;\n}\n\nconst ChallengeInfo: React.FC = () => {\n  const challengeName = useSelector((state: any) => state.data.challenge.name)\n  const { data } = useFetch<Challenge>(\n    `/contents/contests/challenges/${challengeName?.split(' ').join('_')}/index.md`\n  )\n\n  return (\n    <>\n      <ContainerInfo>\n        <Title>\n          {titleCase(challengeName as string)}\n        </Title>\n        <Separator />\n      </ContainerInfo>\n      <ContainerDescription>\n        <Info>\n          {data && base64.decode(data.content).length > 1\n            ? <ReactMarkdown source={base64.decode(data.content)} />\n            : ''}\n        </Info>\n      </ContainerDescription>\n    </>\n  )\n}\n\nexport default ChallengeInfo\n"]},"metadata":{},"sourceType":"module"}