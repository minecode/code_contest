{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest_frontend/src/components/ChallengeInfo/index.tsx\";\nimport React from 'react';\nimport { ContainerInfo, ContainerDescription, Title, Separator, Info } from './styles';\nimport base64 from 'base-64';\nimport ReactMarkdown from 'react-markdown';\nimport { titleCase } from '../Utils';\nimport { useSelector } from 'react-redux';\n\nconst ChallengeInfo = () => {\n  const challengeName = useSelector(state => state.data.selectedChallenge.name);\n  const challengeIndex = useSelector(state => state.data.challengeIndex);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ContainerInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, titleCase(challengeName.split('/')[1])), /*#__PURE__*/React.createElement(Separator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ContainerDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, challengeIndex && base64.decode(challengeIndex.content).length > 1 ? /*#__PURE__*/React.createElement(ReactMarkdown, {\n    source: base64.decode(challengeIndex.content),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 27\n    }\n  }) : '')));\n};\n\nexport default ChallengeInfo;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest_frontend/src/components/ChallengeInfo/index.tsx"],"names":["React","ContainerInfo","ContainerDescription","Title","Separator","Info","base64","ReactMarkdown","titleCase","useSelector","ChallengeInfo","challengeName","state","data","selectedChallenge","name","challengeIndex","split","decode","content","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,aADJ,EAEIC,oBAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,IALJ,QAMO,UANP;AAQA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAMA,MAAMC,aAAuB,GAAG,MAAM;AAClC,QAAMC,aAAa,GAAGF,WAAW,CAAEG,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWC,iBAAX,CAA6BC,IAA9C,CAAjC;AACA,QAAMC,cAAc,GAAGP,WAAW,CAAEG,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWG,cAA5B,CAAlC;AACA,sBACI,uDACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,SAAS,CAACG,aAAa,CAACM,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAD,CADd,CADJ,eAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,eAOI,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,cAAc,IAAIV,MAAM,CAACY,MAAP,CAAcF,cAAc,CAACG,OAA7B,EAAsCC,MAAtC,GAA+C,CAAjE,gBACK,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEd,MAAM,CAACY,MAAP,CAAcF,cAAc,CAACG,OAA7B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,GAEK,EAHV,CADJ,CAPJ,CADJ;AAiBH,CApBD;;AAsBA,eAAeT,aAAf","sourcesContent":["import React from 'react'\n\nimport {\n    ContainerInfo,\n    ContainerDescription,\n    Title,\n    Separator,\n    Info\n} from './styles'\n\nimport base64 from 'base-64'\nimport ReactMarkdown from 'react-markdown'\nimport { titleCase } from '../Utils'\nimport { useSelector } from 'react-redux'\n\nexport interface Props {\n    challengeName?: string;\n}\n\nconst ChallengeInfo: React.FC = () => {\n    const challengeName = useSelector((state: any) => state.data.selectedChallenge.name)\n    const challengeIndex = useSelector((state: any) => state.data.challengeIndex)\n    return (\n        <>\n            <ContainerInfo>\n                <Title>\n                    {titleCase(challengeName.split('/')[1] as string)}\n                </Title>\n                <Separator />\n            </ContainerInfo>\n            <ContainerDescription>\n                <Info>\n                    {challengeIndex && base64.decode(challengeIndex.content).length > 1\n                        ? <ReactMarkdown source={base64.decode(challengeIndex.content)} />\n                        : ''}\n                </Info>\n            </ContainerDescription>\n        </>\n    )\n}\n\nexport default ChallengeInfo\n"]},"metadata":{},"sourceType":"module"}