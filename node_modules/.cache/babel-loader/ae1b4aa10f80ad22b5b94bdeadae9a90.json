{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/Authentication/index.tsx\";\nimport React from 'react';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Auth } from './styles';\n\nconst Authentication = () => {\n  const globalState = useSelector(state => state);\n  const authentication = globalState.data_auth.authenticated;\n  const dispatch = useDispatch();\n\n  const login = response => {\n    const newState = {\n      data: {\n        authenticated: true,\n        user: {\n          id: response.googleId,\n          name: response.profileObj.givenName,\n          surname: response.profileObj.familyName,\n          image: response.profileObj.ImageUrl\n        },\n        token: response.tokenId\n      }\n    };\n    dispatch({\n      type: 'LOGIN',\n      data: newState\n    });\n  };\n\n  const badResponseGoogle = response => {\n    console.log(response);\n    dispatch({\n      type: 'BAD_RESPONSE',\n      data: null\n    });\n  };\n\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT',\n      data: null\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Auth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, authentication ? /*#__PURE__*/React.createElement(GoogleLogout, {\n    clientId: \"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\",\n    buttonText: \"Logout\",\n    onLogoutSuccess: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\",\n    buttonText: \"Login\",\n    onSuccess: login,\n    onFailure: badResponseGoogle,\n    cookiePolicy: 'single_host_origin',\n    isSignedIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Authentication;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/Authentication/index.tsx"],"names":["React","GoogleLogin","GoogleLogout","useDispatch","useSelector","Auth","Authentication","globalState","state","authentication","data_auth","authenticated","dispatch","login","response","newState","data","user","id","googleId","name","profileObj","givenName","surname","familyName","image","ImageUrl","token","tokenId","type","badResponseGoogle","console","log","logout"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,oBAA1C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,IAAT,QAAqB,UAArB;;AAEA,MAAMC,cAAwB,GAAG,MAAM;AACrC,QAAMC,WAAW,GAAGH,WAAW,CAAEI,KAAD,IAAgBA,KAAjB,CAA/B;AACA,QAAMC,cAAc,GAAGF,WAAW,CAACG,SAAZ,CAAsBC,aAA7C;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,QAAMU,KAAK,GAAIC,QAAD,IAAmB;AAC/B,UAAMC,QAAQ,GAAG;AACfC,MAAAA,IAAI,EAAE;AACJL,QAAAA,aAAa,EAAE,IADX;AAEJM,QAAAA,IAAI,EAAE;AACJC,UAAAA,EAAE,EAAEJ,QAAQ,CAACK,QADT;AAEJC,UAAAA,IAAI,EAAEN,QAAQ,CAACO,UAAT,CAAoBC,SAFtB;AAGJC,UAAAA,OAAO,EAAET,QAAQ,CAACO,UAAT,CAAoBG,UAHzB;AAIJC,UAAAA,KAAK,EAAEX,QAAQ,CAACO,UAAT,CAAoBK;AAJvB,SAFF;AAQJC,QAAAA,KAAK,EAAEb,QAAQ,CAACc;AARZ;AADS,KAAjB;AAYAhB,IAAAA,QAAQ,CAAC;AAAEiB,MAAAA,IAAI,EAAE,OAAR;AAAiBb,MAAAA,IAAI,EAAED;AAAvB,KAAD,CAAR;AACD,GAdD;;AAgBA,QAAMe,iBAAiB,GAAIhB,QAAD,IAAmB;AAC3CiB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAZ;AACAF,IAAAA,QAAQ,CAAC;AAAEiB,MAAAA,IAAI,EAAE,cAAR;AAAwBb,MAAAA,IAAI,EAAE;AAA9B,KAAD,CAAR;AACD,GAHD;;AAKA,QAAMiB,MAAM,GAAG,MAAM;AACnBrB,IAAAA,QAAQ,CAAC;AAAEiB,MAAAA,IAAI,EAAE,QAAR;AAAkBb,MAAAA,IAAI,EAAE;AAAxB,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,cAAc,gBACb,oBAAC,YAAD;AACE,IAAA,QAAQ,EAAC,0EADX;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,eAAe,EAAEwB,MAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,gBAOb,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAC,0EADX;AAEE,IAAA,UAAU,EAAC,OAFb;AAGE,IAAA,SAAS,EAAEpB,KAHb;AAIE,IAAA,SAAS,EAAEiB,iBAJb;AAKE,IAAA,YAAY,EAAE,oBALhB;AAME,IAAA,UAAU,EAAE,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADF;AAoBD,CAlDD;;AAoDA,eAAexB,cAAf","sourcesContent":["import React from 'react'\n\nimport { GoogleLogin, GoogleLogout } from 'react-google-login'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Auth } from './styles'\n\nconst Authentication: React.FC = () => {\n  const globalState = useSelector((state: any) => state)\n  const authentication = globalState.data_auth.authenticated\n  const dispatch = useDispatch()\n\n  const login = (response: any) => {\n    const newState = {\n      data: {\n        authenticated: true,\n        user: {\n          id: response.googleId,\n          name: response.profileObj.givenName,\n          surname: response.profileObj.familyName,\n          image: response.profileObj.ImageUrl\n        },\n        token: response.tokenId\n      }\n    }\n    dispatch({ type: 'LOGIN', data: newState })\n  }\n\n  const badResponseGoogle = (response: any) => {\n    console.log(response)\n    dispatch({ type: 'BAD_RESPONSE', data: null })\n  }\n\n  const logout = () => {\n    dispatch({ type: 'LOGOUT', data: null })\n  }\n\n  return (\n    <Auth>\n      {authentication ? (\n        <GoogleLogout\n          clientId='156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com'\n          buttonText='Logout'\n          onLogoutSuccess={logout}\n        ></GoogleLogout>\n      ) : (\n        <GoogleLogin\n          clientId='156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com'\n          buttonText='Login'\n          onSuccess={login}\n          onFailure={badResponseGoogle}\n          cookiePolicy={'single_host_origin'}\n          isSignedIn={true}\n        />\n      )}\n    </Auth>\n  )\n}\n\nexport default Authentication\n"]},"metadata":{},"sourceType":"module"}