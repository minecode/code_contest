{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/ContestButton/index.tsx\";\nimport React from 'react';\nimport { titleCase } from '../Utils';\nimport { Container, ContestIcon } from './styles';\nimport { useSelector } from 'react-redux';\nimport { useFetch } from 'src/hooks/useFetch';\n\nconst ContestButton = ({\n  contestName\n}) => {\n  const selectedChallengeName = useSelector(state => state.data.challenge.name);\n  const dataAuth = useSelector(state => state.data.auth);\n  const {\n    data: userScore\n  } = useFetch(`http://localhost:4001/contests/${dataAuth.user.id}/${challengeName}`);\n  return /*#__PURE__*/React.createElement(Container, {\n    className: selectedChallengeName && contestName.split('/')[0] === selectedChallengeName.split('/')[0].split(' ').join('_') ? 'active' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ContestIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), contestName ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 26\n    }\n  }, titleCase(contestName.split('/')[0])) : /*#__PURE__*/React.createElement(React.Fragment, null), userScore && userScore.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 48\n    }\n  }, \"ge\") : /*#__PURE__*/React.createElement(React.Fragment, null))));\n};\n\nexport default ContestButton;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/ContestButton/index.tsx"],"names":["React","titleCase","Container","ContestIcon","useSelector","useFetch","ContestButton","contestName","selectedChallengeName","state","data","challenge","name","dataAuth","auth","userScore","user","id","challengeName","split","join","width","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,UAAvC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAUA,MAAMC,aAA8B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAC1D,QAAMC,qBAAqB,GAAGJ,WAAW,CAAEK,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWC,SAAX,CAAqBC,IAAtC,CAAzC;AACA,QAAMC,QAAQ,GAAGT,WAAW,CAAEK,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWI,IAA5B,CAA5B;AACA,QAAM;AAAEJ,IAAAA,IAAI,EAAEK;AAAR,MAAsBV,QAAQ,CAAe,kCAAiCQ,QAAQ,CAACG,IAAT,CAAcC,EAAG,IAAGC,aAAc,EAAlF,CAApC;AAEA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEV,qBAAqB,IAAID,WAAW,CAACY,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,MAA8BX,qBAAqB,CAACW,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoCA,KAApC,CAA0C,GAA1C,EAA+CC,IAA/C,CAAoD,GAApD,CAAvD,GAAkH,QAAlH,GAA6H,EAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGd,WAAW,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,SAAS,CAACM,WAAW,CAACY,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAD,CAAhB,CAAH,gBAAyD,yCAFvE,EAGGJ,SAAS,IAAIA,SAAS,CAACO,MAAV,GAAmB,CAAhC,gBAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAApC,gBAAgD,yCAHnD,CADF,CADF,CADF;AAWD,CAhBD;;AAkBA,eAAehB,aAAf","sourcesContent":["import React from 'react'\nimport { titleCase } from '../Utils'\n\nimport { Container, ContestIcon } from './styles'\nimport { useSelector } from 'react-redux'\nimport { useFetch } from 'src/hooks/useFetch'\n\nexport interface Props {\n  contestName: string\n}\n\ninterface UserScore {\n  score: number\n}\n\nconst ContestButton: React.FC<Props> = ({ contestName }) => {\n  const selectedChallengeName = useSelector((state: any) => state.data.challenge.name)\n  const dataAuth = useSelector((state: any) => state.data.auth)\n  const { data: userScore } = useFetch<UserScore[]>(`http://localhost:4001/contests/${dataAuth.user.id}/${challengeName}`)\n\n  return (\n    <Container className={selectedChallengeName && contestName.split('/')[0] === selectedChallengeName.split('/')[0].split(' ').join('_') ? 'active' : ''}>\n      <div style={{ width: '100%' }}>\n        <div>\n          <ContestIcon />\n          {contestName ? <span>{titleCase(contestName.split('/')[0])}</span> : <></>}\n          {userScore && userScore.length > 0 ? <p>ge</p> : <></> }\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nexport default ContestButton\n"]},"metadata":{},"sourceType":"module"}