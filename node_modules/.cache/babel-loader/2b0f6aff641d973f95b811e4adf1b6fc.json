{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/Challenge/index.tsx\";\nimport React from 'react';\nimport { Container, Grid, LoginInfo, Message } from './styles';\nimport { Col, Row } from 'react-bootstrap';\nimport ChallengeInfo from '../ChallengeInfo';\nimport ContestList from '../ContestList';\nimport Drop from '../Drop';\nimport { useSelector } from 'react-redux';\nimport { login, badResponseGoogle } from '../Utils';\n\nconst Challenge = () => {\n  const data = useSelector(state => state.data);\n  const authentication = data.auth.authenticated;\n  const dataChallenge = data.challenge;\n  const challengeName = dataChallenge.name;\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ContestList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), challengeName ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ChallengeInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), authentication ? /*#__PURE__*/React.createElement(Drop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(LoginInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"You need to \", /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\",\n    buttonText: \"Login\",\n    onSuccess: login,\n    onFailure: badResponseGoogle,\n    cookiePolicy: 'single_host_origin',\n    isSignedIn: true,\n    render: renderProps => /*#__PURE__*/React.createElement(BtnGoogle, {\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, \"Sign In w/ Google\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 44\n    }\n  }), \" to send your solution!\"))))) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n};\n\nexport default Challenge;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/Challenge/index.tsx"],"names":["React","Container","Grid","LoginInfo","Message","Col","Row","ChallengeInfo","ContestList","Drop","useSelector","login","badResponseGoogle","Challenge","data","state","authentication","auth","authenticated","dataChallenge","challenge","challengeName","name","renderProps","onClick","disabled"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,UAApD;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,KAAT,EAAgBC,iBAAhB,QAAyC,UAAzC;;AAEA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAMC,IAAI,GAAGJ,WAAW,CAAEK,KAAD,IAAgBA,KAAK,CAACD,IAAvB,CAAxB;AACA,QAAME,cAAc,GAAGF,IAAI,CAACG,IAAL,CAAUC,aAAjC;AACA,QAAMC,aAAa,GAAGL,IAAI,CAACM,SAA3B;AACA,QAAMC,aAAa,GAAGF,aAAa,CAACG,IAApC;AAEA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGD,aAAa,gBACZ,uDACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGL,cAAc,gBACb,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADa,gBAGb,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,SAAS,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAuB,oBAAC,WAAD;AACrB,IAAA,QAAQ,EAAC,0EADY;AAErB,IAAA,UAAU,EAAC,OAFU;AAGrB,IAAA,SAAS,EAAEL,KAHU;AAIrB,IAAA,SAAS,EAAEC,iBAJU;AAKrB,IAAA,YAAY,EAAE,oBALO;AAMrB,IAAA,UAAU,EAAE,IANS;AAOrB,IAAA,MAAM,EAAEW,WAAW,iBACjB,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAEA,WAAW,CAACC,OAAhC;AAAyC,MAAA,QAAQ,EAAED,WAAW,CAACE,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BARmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,4BADF,CADF,CADF,CALJ,CADY,gBA0BZ,yCA5BJ,CADF,CADF;AAmCD,CAzCD;;AA2CA,eAAeZ,SAAf","sourcesContent":["import React from 'react'\n\nimport { Container, Grid, LoginInfo, Message } from './styles'\nimport { Col, Row } from 'react-bootstrap'\n\nimport ChallengeInfo from '../ChallengeInfo'\nimport ContestList from '../ContestList'\n\nimport Drop from '../Drop'\nimport { useSelector } from 'react-redux'\n\nimport { login, badResponseGoogle } from '../Utils'\n\nconst Challenge: React.FC = () => {\n  const data = useSelector((state: any) => state.data)\n  const authentication = data.auth.authenticated\n  const dataChallenge = data.challenge\n  const challengeName = dataChallenge.name\n\n  return (\n    <Container>\n      <Grid>\n        <ContestList />\n        {challengeName ? (\n          <>\n            <ChallengeInfo />\n            {authentication ? (\n              <Drop />\n            ) : (\n              <Message>\n                <Row>\n                  <Col xs={12} className=\"text-center\">\n                    <LoginInfo>You need to <GoogleLogin\n                      clientId='156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com'\n                      buttonText='Login'\n                      onSuccess={login}\n                      onFailure={badResponseGoogle}\n                      cookiePolicy={'single_host_origin'}\n                      isSignedIn={true}\n                      render={renderProps => (\n                        <BtnGoogle onClick={renderProps.onClick} disabled={renderProps.disabled}>Sign In w/ Google</BtnGoogle>\n                      )}\n                    /> to send your solution!</LoginInfo>\n                  </Col>\n                </Row>\n              </Message>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n      </Grid>\n    </Container>\n  )\n}\n\nexport default Challenge\n"]},"metadata":{},"sourceType":"module"}