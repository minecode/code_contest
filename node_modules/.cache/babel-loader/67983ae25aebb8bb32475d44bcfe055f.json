{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest/src/components/Navbar/index.tsx\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFetch } from 'src/hooks/useFetch';\nimport Authentication from '../Authentication';\nimport { Container, Avatar, UserInfo, Auth } from './styles';\n\nconst Navbar = () => {\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.data);\n  const dataAuth = data.auth;\n  const authentication = dataAuth.authenticated;\n  const dataChallenge = data.challenge;\n  const challengeName = dataChallenge.name; // const dataGlobalScore = data.globalScore\n  // const dataListOfUsers = data.listOfUsers\n  // const dataChallengeScore = data.challengeScore\n\n  const {\n    data: globalScore\n  } = useFetch('http://localhost:4001/contests/global');\n  const {\n    data: listOfUsers\n  } = useFetch('http://localhost:4001/contests/user');\n  const {\n    data: challengeScore\n  } = useFetch(`http://localhost:4001/contests/global/${challengeName}`);\n\n  if (globalScore || listOfUsers || challengeScore) {\n    const newData = {\n      data: {\n        auth: dataAuth,\n        challenge: dataChallenge,\n        globalScore: globalScore,\n        listOfUsers: listOfUsers,\n        challengeScore: challengeScore\n      }\n    }; // dispatch({ type: 'CHALLENGE', data: newData })\n  }\n\n  console.log(useSelector(state => state.data));\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, authentication.authenticated ? /*#__PURE__*/React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Welcome, \", authentication.user.name, \"!\"), /*#__PURE__*/React.createElement(Avatar, {\n    src: authentication.user.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Auth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Authentication, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest/src/components/Navbar/index.tsx"],"names":["React","useDispatch","useSelector","useFetch","Authentication","Container","Avatar","UserInfo","Auth","Navbar","dispatch","data","state","dataAuth","auth","authentication","authenticated","dataChallenge","challenge","challengeName","name","globalScore","listOfUsers","challengeScore","newData","console","log","user","image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,EAAsCC,IAAtC,QAAkD,UAAlD;;AAeA,MAAMC,MAAgB,GAAG,MAAM;AAC7B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,IAAI,GAAGT,WAAW,CAAEU,KAAD,IAAgBA,KAAK,CAACD,IAAvB,CAAxB;AACA,QAAME,QAAQ,GAAGF,IAAI,CAACG,IAAtB;AACA,QAAMC,cAAc,GAAGF,QAAQ,CAACG,aAAhC;AACA,QAAMC,aAAa,GAAGN,IAAI,CAACO,SAA3B;AACA,QAAMC,aAAa,GAAGF,aAAa,CAACG,IAApC,CAN6B,CAO7B;AACA;AACA;;AAEA,QAAM;AAAET,IAAAA,IAAI,EAAEU;AAAR,MAAwBlB,QAAQ,CAAS,uCAAT,CAAtC;AACA,QAAM;AAAEQ,IAAAA,IAAI,EAAEW;AAAR,MAAwBnB,QAAQ,CAAY,qCAAZ,CAAtC;AACA,QAAM;AAAEQ,IAAAA,IAAI,EAAEY;AAAR,MAA2BpB,QAAQ,CAAU,yCAAwCgB,aAAc,EAAhE,CAAzC;;AACA,MAAIE,WAAW,IAAIC,WAAf,IAA8BC,cAAlC,EAAkD;AAChD,UAAMC,OAAO,GAAG;AACdb,MAAAA,IAAI,EAAE;AACJG,QAAAA,IAAI,EAAED,QADF;AAEJK,QAAAA,SAAS,EAAED,aAFP;AAGJI,QAAAA,WAAW,EAAEA,WAHT;AAIJC,QAAAA,WAAW,EAAEA,WAJT;AAKJC,QAAAA,cAAc,EAAEA;AALZ;AADQ,KAAhB,CADgD,CAWhD;AACD;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYxB,WAAW,CAAEU,KAAD,IAAgBA,KAAK,CAACD,IAAvB,CAAvB;AACA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,cAAc,CAACC,aAAf,gBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBD,cAAc,CAACY,IAAf,CAAoBP,IAApC,MADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEL,cAAc,CAACY,IAAf,CAAoBC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADD,gBAMC,yCAPJ,eASE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,CADF;AAeD,CA3CD;;AA6CA,eAAenB,MAAf","sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useFetch } from 'src/hooks/useFetch'\n\nimport Authentication from '../Authentication'\nimport { Container, Avatar, UserInfo, Auth } from './styles'\n\ninterface User {\n\tuserId?: string;\n\tuser: UserApi;\n\tscore: number;\n}\n\ninterface UserApi {\n\tuserId: string;\n\tfirstName: string;\n\tlastName: string;\n\timageUrl: string;\n}\n\nconst Navbar: React.FC = () => {\n  const dispatch = useDispatch()\n  const data = useSelector((state: any) => state.data)\n  const dataAuth = data.auth\n  const authentication = dataAuth.authenticated\n  const dataChallenge = data.challenge\n  const challengeName = dataChallenge.name\n  // const dataGlobalScore = data.globalScore\n  // const dataListOfUsers = data.listOfUsers\n  // const dataChallengeScore = data.challengeScore\n\n  const { data: globalScore } = useFetch<User[]>('http://localhost:4001/contests/global')\n  const { data: listOfUsers } = useFetch<UserApi[]>('http://localhost:4001/contests/user')\n  const { data: challengeScore } = useFetch<User[]>(`http://localhost:4001/contests/global/${challengeName}`)\n  if (globalScore || listOfUsers || challengeScore) {\n    const newData = {\n      data: {\n        auth: dataAuth,\n        challenge: dataChallenge,\n        globalScore: globalScore,\n        listOfUsers: listOfUsers,\n        challengeScore: challengeScore\n      }\n    }\n\n    // dispatch({ type: 'CHALLENGE', data: newData })\n  }\n  console.log(useSelector((state: any) => state.data))\n  return (\n    <Container>\n      {authentication.authenticated ? (\n        <UserInfo>\n          <span>Welcome, {authentication.user.name}!</span>\n          <Avatar src={authentication.user.image} />\n        </UserInfo>\n      ) : (\n        <></>\n      )}\n      <Auth>\n        <Authentication />\n      </Auth>\n    </Container>\n  )\n}\n\nexport default Navbar\n"]},"metadata":{},"sourceType":"module"}