{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport base64 from \"base-64\";\nimport apiDatabase from \"../../services/apiDatabase\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { BtnGoogle } from \"../Authentication/Authentication\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { LoginInfo, LoginMessage } from \"./LoginMessage\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Challenge = () => {\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.data);\n\n  const login = async response => {\n    const newData = {\n      data: data\n    };\n    newData.data.auth = {\n      authenticated: true,\n      user: {\n        id: response.googleId,\n        name: response.profileObj.givenName,\n        surname: response.profileObj.familyName,\n        image: response.profileObj.imageUrl\n      },\n      token: response.tokenId\n    };\n    await apiDatabase.post(`/user/${response.googleId}/${response.profileObj.givenName}/${response.profileObj.familyName}/${base64.encode(response.profileObj.imageUrl)}`);\n    dispatch({\n      type: \"LOGIN\",\n      data: newData\n    });\n  };\n\n  const badResponseGoogle = response => {\n    dispatch({\n      type: \"BAD_RESPONSE\",\n      data: null\n    });\n  };\n\n  return __jsx(LoginMessage, null, __jsx(Row, null, __jsx(Col, {\n    xs: 12,\n    className: \"text-center\"\n  }, __jsx(LoginInfo, null, \"You need to\", \" \", __jsx(GoogleLogin, {\n    clientId: \"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\",\n    buttonText: \"Login\",\n    onSuccess: login,\n    onFailure: badResponseGoogle,\n    cookiePolicy: \"single_host_origin\",\n    isSignedIn: true,\n    render: renderProps => __jsx(BtnGoogle, {\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled\n    }, \"Sign In w/ Google\")\n  }), \" \", \"to send your solution!\"))));\n};\n\nexport default Challenge;","map":null,"metadata":{},"sourceType":"module"}