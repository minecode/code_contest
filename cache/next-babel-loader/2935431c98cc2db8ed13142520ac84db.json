{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport useSWR from 'swr';\nimport { config } from '../components/Utils';\nimport apiCodeContest from '../services/apiCodeContest';\nexport function useFetch(url) {\n  console.log('useFetch', url, ' ', config);\n\n  var _useSWR = useSWR(url, /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return apiCodeContest.get(url, config);\n\n            case 2:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), {\n    revalidateOnFocus: true\n  }),\n      data = _useSWR.data,\n      error = _useSWR.error,\n      mutate = _useSWR.mutate;\n\n  console.log(data);\n  console.log(error);\n  return {\n    data: data,\n    error: error,\n    mutate: mutate\n  };\n}","map":null,"metadata":{},"sourceType":"module"}