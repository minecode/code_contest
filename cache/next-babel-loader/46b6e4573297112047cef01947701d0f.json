{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport base64 from \"base-64\";\nimport apiDatabase from \"../../services/apiDatabase\";\nimport { Auth, BtnGoogle, LogoutIcon, LoginIcon } from \"./Authentication\";\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Authentication = () => {\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.data);\n  const authenticated = useSelector(state => state.data.auth.authenticated);\n\n  const login = async response => {\n    const newData = {\n      data: data\n    };\n    newData.data.auth = {\n      authenticated: true,\n      user: {\n        id: response.googleId,\n        name: response.profileObj.givenName,\n        surname: response.profileObj.familyName,\n        image: response.profileObj.imageUrl\n      },\n      token: response.tokenId\n    };\n    await apiDatabase.post(`/user/${response.googleId}/${response.profileObj.givenName}/${response.profileObj.familyName}/${base64.encode(response.profileObj.imageUrl)}`);\n    dispatch({\n      type: \"LOGIN\",\n      data: newData\n    });\n  };\n\n  const badResponseGoogle = response => {\n    dispatch({\n      type: \"BAD_RESPONSE\",\n      data: null\n    });\n  };\n\n  const logout = () => {\n    const newData = {\n      data: data\n    };\n    newData.data.auth.authenticated = false;\n    dispatch({\n      type: \"LOGOUT\",\n      data: newData\n    });\n  };\n\n  return __jsx(Auth, null, authenticated ? __jsx(GoogleLogout, {\n    clientId: \"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\",\n    onLogoutSuccess: logout,\n    render: renderProps => __jsx(BtnGoogle, {\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled\n    }, __jsx(\"span\", null, \"Logout \"), __jsx(LogoutIcon, null))\n  }) : __jsx(GoogleLogin, {\n    clientId: \"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\",\n    onSuccess: login,\n    onFailure: badResponseGoogle,\n    cookiePolicy: \"single_host_origin\",\n    isSignedIn: true,\n    render: renderProps => __jsx(BtnGoogle, {\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled\n    }, __jsx(\"span\", null, \"Login w/ Google \"), __jsx(LoginIcon, null))\n  }));\n};\n\nexport default Authentication;","map":null,"metadata":{},"sourceType":"module"}