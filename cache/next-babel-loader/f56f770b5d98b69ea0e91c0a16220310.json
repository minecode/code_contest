{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { titleCase } from \"../Utils\";\nimport { Container, HashtagIcon, CheckIcon, Challenge } from \"./ChallengeButton\";\nimport { useSelector } from \"react-redux\";\n\nvar ChallengeButton = function ChallengeButton(_ref) {\n  var challengeName = _ref.challengeName;\n  var authenticated = useSelector(function (state) {\n    return state.data.auth.authenticated;\n  });\n  var challengeList = useSelector(function (state) {\n    return state.data.challengeList;\n  });\n  var selectedChallengeName = useSelector(function (state) {\n    return state.data.selectedChallenge.name;\n  });\n  return __jsx(Container, {\n    className: selectedChallengeName && challengeName.split(\"/\")[0].toUpperCase() === selectedChallengeName.split(\"/\")[0].split(\" \").join(\"_\").toUpperCase() && challengeName.split(\"/\")[1].toUpperCase() === selectedChallengeName.split(\"/\")[1].split(\" \").join(\"_\").toUpperCase() ? \"active\" : \"\"\n  }, __jsx(Challenge, null, __jsx(\"div\", null, __jsx(HashtagIcon, null), challengeName ? __jsx(\"span\", null, titleCase(challengeName.split(\"/\")[1])) : __jsx(React.Fragment, null)), authenticated && challengeList && challengeList.filter(function (challenge) {\n    return challenge.challengeId.toUpperCase() === challengeName.split(\"/\")[1].toUpperCase() && challenge.contestId.toUpperCase() === challengeName.split(\"/\")[0].toUpperCase();\n  }).length > 0 ? __jsx(CheckIcon, null) : __jsx(React.Fragment, null)));\n};\n\nexport default ChallengeButton;","map":null,"metadata":{},"sourceType":"module"}