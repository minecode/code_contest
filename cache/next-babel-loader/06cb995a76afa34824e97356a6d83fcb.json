{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport base64 from \"base-64\";\nimport apiDatabase from \"../../services/apiDatabase\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { BtnGoogle } from \"../Authentication/Authentication\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { LoginInfo, LoginMessage } from \"./LoginMessage\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nvar Challenge = function Challenge() {\n  var dispatch = useDispatch();\n  var data = useSelector(function (state) {\n    return state.data;\n  });\n\n  var login = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n      var newData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              newData = {\n                data: data\n              };\n              newData.data.auth = {\n                authenticated: true,\n                user: {\n                  id: response.googleId,\n                  name: response.profileObj.givenName,\n                  surname: response.profileObj.familyName,\n                  image: response.profileObj.imageUrl\n                },\n                token: response.tokenId\n              };\n              _context.next = 4;\n              return apiDatabase.post(\"/user/\".concat(response.googleId, \"/\").concat(response.profileObj.givenName, \"/\").concat(response.profileObj.familyName, \"/\").concat(base64.encode(response.profileObj.imageUrl)));\n\n            case 4:\n              dispatch({\n                type: \"LOGIN\",\n                data: newData\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function login(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var badResponseGoogle = function badResponseGoogle(response) {\n    dispatch({\n      type: \"BAD_RESPONSE\",\n      data: null\n    });\n  };\n\n  return __jsx(LoginMessage, null, __jsx(Row, null, __jsx(Col, {\n    xs: 12,\n    className: \"text-center\"\n  }, __jsx(LoginInfo, null, \"You need to\", \" \", __jsx(GoogleLogin, {\n    clientId: \"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\",\n    buttonText: \"Login\",\n    onSuccess: login,\n    onFailure: badResponseGoogle,\n    cookiePolicy: \"single_host_origin\",\n    isSignedIn: true,\n    render: function render(renderProps) {\n      return __jsx(BtnGoogle, {\n        onClick: renderProps.onClick,\n        disabled: renderProps.disabled\n      }, \"Sign In w/ Google\");\n    }\n  }), \" \", \"to send your solution!\"))));\n};\n\nexport default Challenge;","map":null,"metadata":{},"sourceType":"module"}