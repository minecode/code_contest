{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/home/ubuntu/Desktop/code_contest_frontend/src/components/ChallengeCode/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport base64 from \"base-64\";\nimport Dropzone from \"react-dropzone\";\nimport apiCodeContest from \"../../services/apiCodeContest\";\nimport apiDatabase from \"../../services/apiDatabase\";\nimport { config } from \"../Utils\";\nimport { useSelector } from \"react-redux\";\nimport { Modal, Spinner, Col, Row } from \"react-bootstrap\";\nimport { Container, ChallengeCodeFiles, SubmitButton, ChallengeCodeFilesZone, Editor } from \"./ChallengeCode\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/theme-dracula\";\n\nconst ChallengeCode = () => {\n  _s();\n\n  const dataAuth = useSelector(state => state.data.auth);\n  const selectedChallengeName = useSelector(state => state.data.selectedChallenge.name);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: fileName,\n    1: setFileName\n  } = useState(\"\");\n  const {\n    0: inProgress,\n    1: setInProgress\n  } = useState(false);\n  const {\n    0: bodyRequest,\n    1: setBodyRequest\n  } = useState(null);\n  const {\n    0: currentChallengeName,\n    1: setCurrentChallengeName\n  } = useState(\"challenge\");\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  if (selectedChallengeName && selectedChallengeName !== currentChallengeName) {\n    setShow(false);\n    setFileName(\"\");\n    setInProgress(false);\n    setBodyRequest(null);\n    setCurrentChallengeName(selectedChallengeName);\n  }\n\n  const handleChallengeCode = acceptedFile => {\n    setFileName(acceptedFile.map(file => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.addEventListener(\"load\", async () => {\n        if (reader) {\n          const result = reader.result.split(\",\")[1];\n          const bodyRequest = {\n            message: `${selectedChallengeName === null || selectedChallengeName === void 0 ? void 0 : selectedChallengeName.split(\" \").join(\"_\")}/${dataAuth.user.id}`,\n            committer: {\n              name: \"minecodebot\",\n              email: \"minecode.geral@gmail.com\"\n            },\n            content: `${result}`\n          };\n\n          try {\n            const fileAlreadyExist = await apiDatabase.get(`/contents/${selectedChallengeName === null || selectedChallengeName === void 0 ? void 0 : selectedChallengeName.split(\" \").join(\"_\")}/${dataAuth.user.id}`);\n            bodyRequest.sha = `${fileAlreadyExist.data.sha}`;\n          } catch (error) {\n            console.log(error);\n          }\n\n          setBodyRequest(bodyRequest);\n        }\n      }, false);\n      return file.name;\n    }));\n  };\n\n  const submitFile = async () => {\n    setInProgress(true);\n    await apiCodeContest.put(`/contents/${selectedChallengeName === null || selectedChallengeName === void 0 ? void 0 : selectedChallengeName.split(\" \").join(\"_\")}/${dataAuth.user.id}/resolution.py`, bodyRequest, config);\n  };\n\n  const submitCode = async () => {\n    setInProgress(true);\n    await apiCodeContest.put(`/contents/${selectedChallengeName === null || selectedChallengeName === void 0 ? void 0 : selectedChallengeName.split(\" \").join(\"_\")}/${dataAuth.user.id}/resolution.py`, bodyRequest, config);\n  };\n\n  const onChange = async newValue => {\n    const bodyRequest = {\n      message: `${selectedChallengeName === null || selectedChallengeName === void 0 ? void 0 : selectedChallengeName.split(\" \").join(\"_\")}/${dataAuth.user.id}`,\n      committer: {\n        name: \"minecodebot\",\n        email: \"minecode.geral@gmail.com\"\n      },\n      content: `${base64.encode(newValue)}`\n    };\n\n    try {\n      const fileAlreadyExist = await apiDatabase.get(`/contents/${selectedChallengeName === null || selectedChallengeName === void 0 ? void 0 : selectedChallengeName.split(\" \").join(\"_\")}/${dataAuth.user.id}`);\n      bodyRequest.sha = `${fileAlreadyExist.data.sha}`;\n    } catch (error) {\n      console.log(error);\n    }\n\n    setBodyRequest(bodyRequest);\n  };\n\n  const uploadRepoCode = async () => {\n    try {\n      const getCodeSended = await apiDatabase.get(`/contents/${selectedChallengeName === null || selectedChallengeName === void 0 ? void 0 : selectedChallengeName.split(\" \").join(\"_\")}/${dataAuth.user.id}`);\n      const bodyRequest = {\n        message: `${selectedChallengeName === null || selectedChallengeName === void 0 ? void 0 : selectedChallengeName.split(\" \").join(\"_\")}/${dataAuth.user.id}`,\n        committer: {\n          name: \"minecodebot\",\n          email: \"minecode.geral@gmail.com\"\n        },\n        content: `${getCodeSended.data.content}`\n      };\n      setBodyRequest(bodyRequest);\n    } catch {\n      const bodyRequest = {\n        message: `${selectedChallengeName === null || selectedChallengeName === void 0 ? void 0 : selectedChallengeName.split(\" \").join(\"_\")}/${dataAuth.user.id}`,\n        committer: {\n          name: \"minecodebot\",\n          email: \"minecode.geral@gmail.com\"\n        },\n        content: `${base64.encode(\"# Place your code here\")}`\n      };\n      setBodyRequest(bodyRequest);\n    }\n  };\n\n  useEffect(() => {\n    uploadRepoCode(); // eslint-disable-next-line\n  }, [selectedChallengeName]);\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, selectedChallengeName && selectedChallengeName.split(\"/\")[1].length > 0 ? __jsx(ChallengeCodeFiles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, bodyRequest ? __jsx(React.Fragment, null, __jsx(Editor, {\n    debounceChangePeriod: 1000,\n    mode: \"python\",\n    theme: \"dracula\",\n    onChange: onChange,\n    name: \"codeeditor1\",\n    fontSize: 18,\n    showPrintMargin: true,\n    showGutter: true,\n    highlightActiveLine: true,\n    editorProps: {\n      $blockScrolling: true\n    },\n    value: base64.decode(bodyRequest.content),\n    setOptions: {\n      enableBasicAutocompletion: false,\n      enableLiveAutocompletion: false,\n      enableSnippets: false,\n      showLineNumbers: true,\n      tabSize: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }), __jsx(SubmitButton, {\n    onClick: () => {\n      submitCode();\n      handleShow();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, \"Submit code\"), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, \"or\")) : __jsx(React.Fragment, null), __jsx(Dropzone, {\n    onDrop: handleChallengeCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, ({\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject\n  }) => {\n    return __jsx(ChallengeCodeFilesZone, _extends({}, getRootProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }), __jsx(\"input\", _extends({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 19\n      }\n    })), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, isDragActive ? \"üìÇ\" : \"üìÅ\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 19\n      }\n    }, fileName ? __jsx(React.Fragment, null, fileName) : isDragReject ? __jsx(React.Fragment, null, \" Invalid file \") : __jsx(React.Fragment, null, \"Drag & ChallengeCode images, or click to select files\")));\n  }), inProgress ? __jsx(Modal, {\n    show: show,\n    onHide: handleClose,\n    backChallengeCode: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, \"Test in progress...\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 19\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 23\n    }\n  })), __jsx(Col, {\n    xs: 12,\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 23\n    }\n  }, \"We are testing your solution... Soon as possibel, your pontuation will be upadated!!\")))))) : fileName.length > 0 && bodyRequest ? __jsx(SubmitButton, {\n    onClick: () => {\n      submitFile();\n      handleShow();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, \"Submit file\") : __jsx(React.Fragment, null)) : __jsx(React.Fragment, null));\n};\n\n_s(ChallengeCode, \"nox2bjXlJAHW91RxrfYMw7k4gCc=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ChallengeCode;\nexport default ChallengeCode;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengeCode\");","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest_frontend/src/components/ChallengeCode/index.tsx"],"names":["React","useState","useEffect","base64","Dropzone","apiCodeContest","apiDatabase","config","useSelector","Modal","Spinner","Col","Row","Container","ChallengeCodeFiles","SubmitButton","ChallengeCodeFilesZone","Editor","ChallengeCode","dataAuth","state","data","auth","selectedChallengeName","selectedChallenge","name","show","setShow","fileName","setFileName","inProgress","setInProgress","bodyRequest","setBodyRequest","currentChallengeName","setCurrentChallengeName","handleClose","handleShow","handleChallengeCode","acceptedFile","map","file","reader","FileReader","readAsDataURL","addEventListener","result","split","message","join","user","id","committer","email","content","fileAlreadyExist","get","sha","error","console","log","submitFile","put","submitCode","onChange","newValue","encode","uploadRepoCode","getCodeSended","length","$blockScrolling","decode","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","getRootProps","getInputProps","isDragActive","isDragReject"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport base64 from \"base-64\";\nimport Dropzone from \"react-dropzone\";\nimport apiCodeContest from \"../../services/apiCodeContest\";\nimport apiDatabase from \"../../services/apiDatabase\";\nimport { config } from \"../Utils\";\nimport { useSelector } from \"react-redux\";\nimport { Data, BodyRequest } from \"../Interface\";\nimport { Modal, Spinner, Col, Row } from \"react-bootstrap\";\nimport {\n  Container,\n  ChallengeCodeFiles,\n  SubmitButton,\n  ChallengeCodeFilesZone,\n  Editor,\n} from \"./ChallengeCode\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/theme-dracula\";\n\nconst ChallengeCode: React.FC = () => {\n  const dataAuth = useSelector((state: Data) => state.data.auth);\n  const selectedChallengeName = useSelector(\n    (state: Data) => state.data.selectedChallenge.name\n  );\n\n  const [show, setShow] = useState(false);\n  const [fileName, setFileName] = useState(\"\");\n  const [inProgress, setInProgress] = useState(false);\n  const [bodyRequest, setBodyRequest] = useState<BodyRequest | null>(null);\n  const [currentChallengeName, setCurrentChallengeName] = useState<string>(\n    \"challenge\"\n  );\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  if (selectedChallengeName && selectedChallengeName !== currentChallengeName) {\n    setShow(false);\n    setFileName(\"\");\n    setInProgress(false);\n    setBodyRequest(null);\n    setCurrentChallengeName(selectedChallengeName);\n  }\n\n  const handleChallengeCode = (acceptedFile: any) => {\n    setFileName(\n      acceptedFile.map((file: any) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.addEventListener(\n          \"load\",\n          async () => {\n            if (reader) {\n              const result = (reader.result as string).split(\",\")[1];\n\n              const bodyRequest: BodyRequest = {\n                message: `${selectedChallengeName?.split(\" \").join(\"_\")}/${\n                  dataAuth.user.id\n                }`,\n                committer: {\n                  name: \"minecodebot\",\n                  email: \"minecode.geral@gmail.com\",\n                },\n                content: `${result}`,\n              };\n\n              try {\n                const fileAlreadyExist = await apiDatabase.get(\n                  `/contents/${selectedChallengeName?.split(\" \").join(\"_\")}/${\n                    dataAuth.user.id\n                  }`\n                );\n                bodyRequest.sha = `${fileAlreadyExist.data.sha}`;\n              } catch (error) {\n                console.log(error);\n              }\n              setBodyRequest(bodyRequest);\n            }\n          },\n          false\n        );\n        return file.name;\n      })\n    );\n  };\n\n  const submitFile = async () => {\n    setInProgress(true);\n    await apiCodeContest.put(\n      `/contents/${selectedChallengeName?.split(\" \").join(\"_\")}/${\n        dataAuth.user.id\n      }/resolution.py`,\n      bodyRequest,\n      config\n    );\n  };\n\n  const submitCode = async () => {\n    setInProgress(true);\n    await apiCodeContest.put(\n      `/contents/${selectedChallengeName?.split(\" \").join(\"_\")}/${\n        dataAuth.user.id\n      }/resolution.py`,\n      bodyRequest,\n      config\n    );\n  };\n\n  const onChange = async (newValue: string) => {\n    const bodyRequest: BodyRequest = {\n      message: `${selectedChallengeName?.split(\" \").join(\"_\")}/${\n        dataAuth.user.id\n      }`,\n      committer: {\n        name: \"minecodebot\",\n        email: \"minecode.geral@gmail.com\",\n      },\n      content: `${base64.encode(newValue)}`,\n    };\n\n    try {\n      const fileAlreadyExist = await apiDatabase.get(\n        `/contents/${selectedChallengeName?.split(\" \").join(\"_\")}/${\n          dataAuth.user.id\n        }`\n      );\n      bodyRequest.sha = `${fileAlreadyExist.data.sha}`;\n    } catch (error) {\n      console.log(error);\n    }\n    setBodyRequest(bodyRequest);\n  };\n\n  const uploadRepoCode = async () => {\n    try {\n      const getCodeSended = await apiDatabase.get(\n        `/contents/${selectedChallengeName?.split(\" \").join(\"_\")}/${\n          dataAuth.user.id\n        }`\n      );\n      const bodyRequest: BodyRequest = {\n        message: `${selectedChallengeName?.split(\" \").join(\"_\")}/${\n          dataAuth.user.id\n        }`,\n        committer: {\n          name: \"minecodebot\",\n          email: \"minecode.geral@gmail.com\",\n        },\n        content: `${getCodeSended.data.content}`,\n      };\n      setBodyRequest(bodyRequest);\n    } catch {\n      const bodyRequest: BodyRequest = {\n        message: `${selectedChallengeName?.split(\" \").join(\"_\")}/${\n          dataAuth.user.id\n        }`,\n        committer: {\n          name: \"minecodebot\",\n          email: \"minecode.geral@gmail.com\",\n        },\n        content: `${base64.encode(\"# Place your code here\")}`,\n      };\n      setBodyRequest(bodyRequest);\n    }\n  };\n\n  useEffect(() => {\n    uploadRepoCode();\n    // eslint-disable-next-line\n  }, [selectedChallengeName]);\n\n  return (\n    <Container>\n      {selectedChallengeName &&\n      selectedChallengeName.split(\"/\")[1].length > 0 ? (\n        <ChallengeCodeFiles>\n          {bodyRequest ? (\n            <>\n              <Editor\n                debounceChangePeriod={1000}\n                mode=\"python\"\n                theme=\"dracula\"\n                onChange={onChange}\n                name=\"codeeditor1\"\n                fontSize={18}\n                showPrintMargin={true}\n                showGutter={true}\n                highlightActiveLine={true}\n                editorProps={{ $blockScrolling: true }}\n                value={base64.decode(bodyRequest.content)}\n                setOptions={{\n                  enableBasicAutocompletion: false,\n                  enableLiveAutocompletion: false,\n                  enableSnippets: false,\n                  showLineNumbers: true,\n                  tabSize: 2,\n                }}\n              />\n              <SubmitButton\n                onClick={() => {\n                  submitCode();\n                  handleShow();\n                }}\n              >\n                Submit code\n              </SubmitButton>\n              <h2>or</h2>\n            </>\n          ) : (\n            <></>\n          )}\n          <Dropzone onDrop={handleChallengeCode}>\n            {({ getRootProps, getInputProps, isDragActive, isDragReject }) => {\n              return (\n                <ChallengeCodeFilesZone {...getRootProps()}>\n                  <input {...getInputProps()} />\n                  <span>{isDragActive ? \"üìÇ\" : \"üìÅ\"}</span>\n                  <p>\n                    {fileName ? (\n                      <>{fileName}</>\n                    ) : isDragReject ? (\n                      <> Invalid file </>\n                    ) : (\n                      <>Drag & ChallengeCode images, or click to select files</>\n                    )}\n                  </p>\n                </ChallengeCodeFilesZone>\n              );\n            }}\n          </Dropzone>\n          {inProgress ? (\n            <Modal show={show} onHide={handleClose} backChallengeCode=\"static\">\n              <Modal.Header closeButton>\n                <Modal.Title>Test in progress...</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Container>\n                  <Row>\n                    <Col xs={12} className=\"text-center\">\n                      <Spinner animation=\"border\" />\n                    </Col>\n                    <Col xs={12} className=\"text-center\">\n                      <p>\n                        We are testing your solution... Soon as possibel, your\n                        pontuation will be upadated!!\n                      </p>\n                    </Col>\n                  </Row>\n                </Container>\n              </Modal.Body>\n            </Modal>\n          ) : fileName.length > 0 && bodyRequest ? (\n            <SubmitButton\n              onClick={() => {\n                submitFile();\n                handleShow();\n              }}\n            >\n              Submit file\n            </SubmitButton>\n          ) : (\n            <></>\n          )}\n        </ChallengeCodeFiles>\n      ) : (\n        <></>\n      )}\n    </Container>\n  );\n};\n\nexport default ChallengeCode;\n"]},"metadata":{},"sourceType":"module"}