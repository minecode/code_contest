{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest_frontend/src/components/ContestButton/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { titleCase } from \"../Utils\";\nimport { useSelector } from \"react-redux\";\nimport { Container, ContestIcon, Contest } from \"./ContestButton\";\n\nconst ContestButton = ({\n  contestName,\n  size\n}) => {\n  const dataAuth = useSelector(state => state.data.auth);\n  const userScore = useSelector(state => state.data.userScore);\n  const challengeList = useSelector(state => state.data.challengeList);\n  const selectedChallengeName = useSelector(state => state.data.selectedChallenge.name);\n  return __jsx(Container, {\n    className: selectedChallengeName && contestName.split(\"/\")[0].toUpperCase() === selectedChallengeName.split(\"/\")[0].split(\" \").join(\"_\").toUpperCase() ? \"active\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(Contest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(ContestIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), contestName ? __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, titleCase(contestName.split(\"/\")[0])) : __jsx(React.Fragment, null)), challengeList && dataAuth.authenticated ? userScore ? __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, challengeList.filter(element => {\n    return element.contestId === contestName;\n  }).length, \"/\", size) : __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"0/\", size) : __jsx(React.Fragment, null)));\n};\n\nexport default ContestButton;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest_frontend/src/components/ContestButton/index.tsx"],"names":["React","titleCase","useSelector","Container","ContestIcon","Contest","ContestButton","contestName","size","dataAuth","state","data","auth","userScore","challengeList","selectedChallengeName","selectedChallenge","name","split","toUpperCase","join","authenticated","filter","element","contestId","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SACEC,SADF,EAEEC,WAFF,EAGEC,OAHF,QAIO,iBAJP;;AAWA,MAAMC,aAA8B,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,KAA2B;AAChE,QAAMC,QAAQ,GAAGP,WAAW,CAAEQ,KAAD,IAAiBA,KAAK,CAACC,IAAN,CAAWC,IAA7B,CAA5B;AACA,QAAMC,SAAS,GAAGX,WAAW,CAAEQ,KAAD,IAAiBA,KAAK,CAACC,IAAN,CAAWE,SAA7B,CAA7B;AACA,QAAMC,aAAa,GAAGZ,WAAW,CAAEQ,KAAD,IAAiBA,KAAK,CAACC,IAAN,CAAWG,aAA7B,CAAjC;AACA,QAAMC,qBAAqB,GAAGb,WAAW,CACtCQ,KAAD,IAAiBA,KAAK,CAACC,IAAN,CAAWK,iBAAX,CAA6BC,IADP,CAAzC;AAIA,SACE,MAAC,SAAD;AACE,IAAA,SAAS,EACPF,qBAAqB,IACrBR,WAAW,CAACW,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,EAA0BC,WAA1B,OACEJ,qBAAqB,CAACG,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoCA,KAApC,CAA0C,GAA1C,EAA+CE,IAA/C,CAAoD,GAApD,EAAyDD,WAAzD,EAFF,GAGI,QAHJ,GAII,EANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGZ,WAAW,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,SAAS,CAACM,WAAW,CAACW,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAD,CAAhB,CADU,GAGV,2BALJ,CADF,EASGJ,aAAa,IAAIL,QAAQ,CAACY,aAA1B,GACCR,SAAS,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIC,aAAa,CAACQ,MAAd,CAAsBC,OAAD,IAAa;AAChC,WAAOA,OAAO,CAACC,SAAR,KAAsBjB,WAA7B;AACD,GAFD,EAEGkB,MAJP,OAMIjB,IANJ,CADO,GAUP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASA,IAAT,CAXH,GAcC,2BAvBJ,CATF,CADF;AAsCD,CA9CD;;AAgDA,eAAeF,aAAf","sourcesContent":["import React from \"react\";\nimport { Data } from \"../Interface\";\nimport { titleCase } from \"../Utils\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Container,\n  ContestIcon,\n  Contest,\n} from \"./ContestButton\";\n\nexport interface Props {\n  contestName: string;\n  size: number;\n}\n\nconst ContestButton: React.FC<Props> = ({ contestName, size }) => {\n  const dataAuth = useSelector((state: Data) => state.data.auth);\n  const userScore = useSelector((state: Data) => state.data.userScore);\n  const challengeList = useSelector((state: Data) => state.data.challengeList);\n  const selectedChallengeName = useSelector(\n    (state: Data) => state.data.selectedChallenge.name\n  );\n\n  return (\n    <Container\n      className={\n        selectedChallengeName &&\n        contestName.split(\"/\")[0].toUpperCase() ===\n          selectedChallengeName.split(\"/\")[0].split(\" \").join(\"_\").toUpperCase()\n          ? \"active\"\n          : \"\"\n      }\n    >\n      <Contest>\n        <div>\n          <ContestIcon />\n          {contestName ? (\n            <span>{titleCase(contestName.split(\"/\")[0])}</span>\n          ) : (\n            <></>\n          )}\n        </div>\n        {challengeList && dataAuth.authenticated ? (\n          userScore ? (\n            <span>\n              {\n                challengeList.filter((element) => {\n                  return element.contestId === contestName;\n                }).length\n              }\n              /{size}\n            </span>\n          ) : (\n            <span>0/{size}</span>\n          )\n        ) : (\n          <></>\n        )}\n      </Contest>\n    </Container>\n  );\n};\n\nexport default ContestButton;\n"]},"metadata":{},"sourceType":"module"}