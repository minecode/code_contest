{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest_frontend/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport Navbar from '../components/Navbar';\nimport UserList from '../components/UserList';\nimport LoginMessage from '../components/LoginMessage';\nimport ChallengeInfo from '../components/ChallengeInfo';\nimport ChallengeCode from '../components/ChallengeCode';\nimport ContestList from '../components/ContestList';\nimport { Grid, Container } from '../styles/pages/Home';\nimport { useFetch } from '../hooks/useFetch';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst Layout = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.data);\n  const userId = useSelector(state => state.data.auth.user.id);\n  const authenticated = useSelector(state => state.data.auth.authenticated);\n  const selectedChallengeName = useSelector(state => state.data.selectedChallenge.name);\n  const {\n    data: globalScore\n  } = useFetch('https://code-contest-backend.herokuapp.com/contests/global');\n  const {\n    data: listOfUsers\n  } = useFetch('https://code-contest-backend.herokuapp.com/contests/user');\n  const {\n    data: challengeList\n  } = useFetch(`https://code-contest-backend.herokuapp.com/contests/list/${userId}`);\n  const {\n    data: challengeIndex\n  } = useFetch(`/contents/${selectedChallengeName === null || selectedChallengeName === void 0 ? void 0 : selectedChallengeName.split(' ').join('_')}/index.md`);\n  const {\n    data: challengeScore\n  } = useFetch(`https://code-contest-backend.herokuapp.com/contests/global/${selectedChallengeName}`);\n  const {\n    data: userScore\n  } = useFetch(`https://code-contest-backend.herokuapp.com/contests/${userId}/${selectedChallengeName}`);\n  const {\n    data: dataTree\n  } = useFetch('/git/trees/5c51dbca32b9394fe304b519826c1364806cdb9e?recursive=\"true\"');\n  const {\n    0: load,\n    1: setLoad\n  } = useState(false);\n  useEffect(() => {\n    const newData = {\n      data: data\n    };\n\n    if (globalScore && listOfUsers && challengeScore && userScore && challengeList && dataTree) {\n      newData.data.globalScore = globalScore;\n      newData.data.listOfUsers = listOfUsers;\n      newData.data.challengeScore = challengeScore;\n      newData.data.userScore = userScore;\n      newData.data.challengeList = challengeList;\n      newData.data.tree = dataTree;\n      setLoad(true);\n    }\n\n    if (challengeIndex) {\n      newData.data.challengeIndex = challengeIndex;\n    }\n\n    dispatch({\n      type: 'CHALLENGE',\n      data: newData\n    });\n  }, [globalScore, listOfUsers, challengeScore, userScore, challengeIndex, challengeList, dataTree, dispatch, data]);\n  return __jsx(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 3\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, \"Homepage\")), load ? __jsx(React.Fragment, null, __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 6\n    }\n  }), __jsx(ContestList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 6\n    }\n  }), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 6\n    }\n  }, selectedChallengeName && selectedChallengeName.split('/').length > 1 && selectedChallengeName.split('/')[1].length > 1 ? __jsx(React.Fragment, null, __jsx(ChallengeInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), authenticated ? __jsx(ChallengeCode, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 10\n    }\n  }) : __jsx(LoginMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 10\n    }\n  })) : __jsx(React.Fragment, null, \"Place home page here!\")), __jsx(UserList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 6\n    }\n  })) : __jsx(React.Fragment, null));\n};\n\n_s(Layout, \"8nReTqMUCD2IRIo7G2Ilo69Zlxw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useFetch, useFetch, useFetch, useFetch, useFetch, useFetch, useFetch];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest_frontend/src/pages/index.tsx"],"names":["React","useState","useEffect","Head","Navbar","UserList","LoginMessage","ChallengeInfo","ChallengeCode","ContestList","Grid","Container","useFetch","useSelector","useDispatch","Layout","dispatch","data","state","userId","auth","user","id","authenticated","selectedChallengeName","selectedChallenge","name","globalScore","listOfUsers","challengeList","challengeIndex","split","join","challengeScore","userScore","dataTree","load","setLoad","newData","tree","type","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Head from 'next/head'\nimport Navbar from '../components/Navbar'\nimport UserList from '../components/UserList'\nimport LoginMessage from '../components/LoginMessage'\nimport ChallengeInfo from '../components/ChallengeInfo'\nimport ChallengeCode from '../components/ChallengeCode'\nimport ContestList from '../components/ContestList'\nimport { Grid, Container } from '../styles/pages/Home'\nimport { useFetch } from '../hooks/useFetch'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n\tData,\n\tChallenge as ChallengeInterface,\n\tUser,\n\tUserApi,\n\tChallengeContent,\n\tContest\n} from '../components/Interface'\n\nconst Layout: React.FC = () => {\n\tconst dispatch = useDispatch()\n\tconst data = useSelector((state: Data) => state.data)\n\tconst userId = useSelector((state: Data) => state.data.auth.user.id)\n\tconst authenticated = useSelector(\n\t\t(state: Data) => state.data.auth.authenticated\n\t)\n\tconst selectedChallengeName = useSelector(\n\t\t(state: Data) => state.data.selectedChallenge.name\n\t)\n\n\tconst { data: globalScore } = useFetch<User[]>(\n\t\t'https://code-contest-backend.herokuapp.com/contests/global'\n\t)\n\tconst { data: listOfUsers } = useFetch<UserApi[]>(\n\t\t'https://code-contest-backend.herokuapp.com/contests/user'\n\t)\n\tconst { data: challengeList } = useFetch<ChallengeInterface[]>(\n\t\t`https://code-contest-backend.herokuapp.com/contests/list/${userId}`\n\t)\n\tconst { data: challengeIndex } = useFetch<ChallengeContent>(\n\t\t`/contents/${selectedChallengeName?.split(' ').join('_')}/index.md`\n\t)\n\tconst { data: challengeScore } = useFetch<User[]>(\n\t\t`https://code-contest-backend.herokuapp.com/contests/global/${selectedChallengeName}`\n\t)\n\tconst { data: userScore } = useFetch<User[]>(\n\t\t`https://code-contest-backend.herokuapp.com/contests/${userId}/${selectedChallengeName}`\n\t)\n\tconst { data: dataTree } = useFetch<Contest>(\n\t\t'/git/trees/5c51dbca32b9394fe304b519826c1364806cdb9e?recursive=\"true\"'\n\t)\n\n\tconst [load, setLoad] = useState(false)\n\n\tuseEffect(() => {\n\t\tconst newData = { data: data }\n\t\tif (\n\t\t\tglobalScore &&\n\t\t\tlistOfUsers &&\n\t\t\tchallengeScore &&\n\t\t\tuserScore &&\n\t\t\tchallengeList &&\n\t\t\tdataTree\n\t\t) {\n\t\t\tnewData.data.globalScore = globalScore\n\t\t\tnewData.data.listOfUsers = listOfUsers\n\t\t\tnewData.data.challengeScore = challengeScore\n\t\t\tnewData.data.userScore = userScore\n\t\t\tnewData.data.challengeList = challengeList\n\t\t\tnewData.data.tree = dataTree\n\t\t\tsetLoad(true)\n\t\t}\n\t\tif (challengeIndex) {\n\t\t\tnewData.data.challengeIndex = challengeIndex\n\t\t}\n\t\tdispatch({ type: 'CHALLENGE', data: newData })\n\t}, [\n\t\tglobalScore,\n\t\tlistOfUsers,\n\t\tchallengeScore,\n\t\tuserScore,\n\t\tchallengeIndex,\n\t\tchallengeList,\n\t\tdataTree,\n\t\tdispatch,\n\t\tdata\n\t])\n\n\treturn (\n\t\t<Grid>\n\t\t\t<Head>\n\t\t\t\t<title>Homepage</title>\n\t\t\t</Head>\n\t\t\t{load ? (\n\t\t\t\t<>\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<ContestList />\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t{selectedChallengeName &&\n\t\t\t\t\t\tselectedChallengeName.split('/').length > 1 &&\n\t\t\t\t\t\tselectedChallengeName.split('/')[1].length > 1 ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<ChallengeInfo />\n\t\t\t\t\t\t\t\t{authenticated ? (\n\t\t\t\t\t\t\t\t\t<ChallengeCode />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<LoginMessage />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>Place home page here!</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Container>\n\t\t\t\t\t<UserList />\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<></>\n\t\t\t)}\n\t\t</Grid>\n\t)\n}\n\nexport default Layout\n"]},"metadata":{},"sourceType":"module"}