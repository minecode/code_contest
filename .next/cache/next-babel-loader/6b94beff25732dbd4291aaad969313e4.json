{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/code_contest_frontend/src/components/Authentication/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport base64 from \"base-64\";\nimport apiDatabase from \"../../services/apiDatabase\";\nimport { Auth, BtnGoogle, LogoutIcon, LoginIcon } from \"./Authentication\";\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Authentication = () => {\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.data);\n  const authenticated = useSelector(state => state.data.auth.authenticated);\n\n  const login = async response => {\n    const newData = {\n      data: data\n    };\n    newData.data.auth = {\n      authenticated: true,\n      user: {\n        id: response.googleId,\n        name: response.profileObj.givenName,\n        surname: response.profileObj.familyName,\n        image: response.profileObj.imageUrl\n      },\n      token: response.tokenId\n    };\n    await apiDatabase.post(`/user/${response.googleId}/${response.profileObj.givenName}/${response.profileObj.familyName}/${base64.encode(response.profileObj.imageUrl)}`);\n    dispatch({\n      type: \"LOGIN\",\n      data: newData\n    });\n  };\n\n  const badResponseGoogle = response => {\n    dispatch({\n      type: \"BAD_RESPONSE\",\n      data: null\n    });\n  };\n\n  const logout = () => {\n    const newData = {\n      data: data\n    };\n    newData.data.auth.authenticated = false;\n    dispatch({\n      type: \"LOGOUT\",\n      data: newData\n    });\n  };\n\n  return __jsx(Auth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, authenticated ? __jsx(GoogleLogout, {\n    clientId: \"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\",\n    onLogoutSuccess: logout,\n    render: renderProps => __jsx(BtnGoogle, {\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, \"Logout \"), __jsx(LogoutIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }) : __jsx(GoogleLogin, {\n    clientId: \"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\",\n    onSuccess: login,\n    onFailure: badResponseGoogle,\n    cookiePolicy: \"single_host_origin\",\n    isSignedIn: true,\n    render: renderProps => __jsx(BtnGoogle, {\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, \"Login w/ Google \"), __jsx(LoginIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Authentication;","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest_frontend/src/components/Authentication/index.tsx"],"names":["React","base64","apiDatabase","Auth","BtnGoogle","LogoutIcon","LoginIcon","GoogleLogin","GoogleLogout","useSelector","useDispatch","Authentication","dispatch","data","state","authenticated","auth","login","response","newData","user","id","googleId","name","profileObj","givenName","surname","familyName","image","imageUrl","token","tokenId","post","encode","type","badResponseGoogle","logout","renderProps","onClick","disabled"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport base64 from \"base-64\";\nimport apiDatabase from \"../../services/apiDatabase\";\nimport { Data } from \"../Interface\";\nimport {\n  Auth,\n  BtnGoogle,\n  LogoutIcon,\n  LoginIcon,\n} from \"./Authentication\";\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Authentication: React.FC = () => {\n  const dispatch = useDispatch();\n  const data = useSelector((state: Data) => state.data);\n  const authenticated = useSelector(\n    (state: Data) => state.data.auth.authenticated\n  );\n\n  const login = async (response: any) => {\n    const newData = { data: data };\n    newData.data.auth = {\n      authenticated: true,\n      user: {\n        id: response.googleId,\n        name: response.profileObj.givenName,\n        surname: response.profileObj.familyName,\n        image: response.profileObj.imageUrl,\n      },\n      token: response.tokenId,\n    };\n    await apiDatabase.post(\n      `/user/${response.googleId}/${response.profileObj.givenName}/${\n        response.profileObj.familyName\n      }/${base64.encode(response.profileObj.imageUrl)}`\n    );\n    dispatch({ type: \"LOGIN\", data: newData });\n  };\n\n  const badResponseGoogle = (response: string) => {\n    dispatch({ type: \"BAD_RESPONSE\", data: null });\n  };\n\n  const logout = () => {\n    const newData = { data: data };\n    newData.data.auth.authenticated = false;\n    dispatch({ type: \"LOGOUT\", data: newData });\n  };\n\n  return (\n    <Auth>\n      {authenticated ? (\n        <GoogleLogout\n          clientId=\"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\"\n          onLogoutSuccess={logout}\n          render={(renderProps) => (\n            <BtnGoogle\n              onClick={renderProps.onClick}\n              disabled={renderProps.disabled}\n            >\n              <span>Logout </span>\n              <LogoutIcon />\n            </BtnGoogle>\n          )}\n        ></GoogleLogout>\n      ) : (\n        <GoogleLogin\n          clientId=\"156221636932-bvl7ocr3bhrkikgcqc99k4g1a1s0sla1.apps.googleusercontent.com\"\n          onSuccess={login}\n          onFailure={badResponseGoogle}\n          cookiePolicy={\"single_host_origin\"}\n          isSignedIn={true}\n          render={(renderProps) => (\n            <BtnGoogle\n              onClick={renderProps.onClick}\n              disabled={renderProps.disabled}\n            >\n              <span>Login w/ Google </span>\n              <LoginIcon />\n            </BtnGoogle>\n          )}\n        />\n      )}\n    </Auth>\n  );\n};\n\nexport default Authentication;\n"]},"metadata":{},"sourceType":"module"}