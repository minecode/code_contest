{"ast":null,"code":"export function titleCase(str) {\n  str = str.split('_').join(' ');\n  const splitStr = str.toLowerCase().split(' ');\n\n  for (let i = 0; i < splitStr.length; i++) {\n    // You do not need to check if i is larger than splitStr length, as your for does that for you\n    // Assign it back to the array\n    splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n  } // Directly return the joined string\n\n\n  return splitStr.join(' ');\n}\nexport const config = {\n  headers: {\n    Authorization: `Basic ${process.env.REACT_APP_APIKEY || 'null'}`,\n    Accept: 'application/vnd.github.antiope-preview+json'\n  }\n};","map":{"version":3,"sources":["/home/ubuntu/Desktop/code_contest_frontend/src/components/Utils/index.tsx"],"names":["titleCase","str","split","join","splitStr","toLowerCase","i","length","charAt","toUpperCase","substring","config","headers","Authorization","process","env","REACT_APP_APIKEY","Accept"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAoBC,GAApB,EAAiC;AACpCA,EAAAA,GAAG,GAAGA,GAAG,CAACC,KAAJ,CAAU,GAAV,EAAeC,IAAf,CAAoB,GAApB,CAAN;AACA,QAAMC,QAAQ,GAAGH,GAAG,CAACI,WAAJ,GAAkBH,KAAlB,CAAwB,GAAxB,CAAjB;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AAC1C;AACA;AACIF,IAAAA,QAAQ,CAACE,CAAD,CAAR,GAAcF,QAAQ,CAACE,CAAD,CAAR,CAAYE,MAAZ,CAAmB,CAAnB,EAAsBC,WAAtB,KAAsCL,QAAQ,CAACE,CAAD,CAAR,CAAYI,SAAZ,CAAsB,CAAtB,CAApD;AACH,GAPmC,CAQpC;;;AACA,SAAON,QAAQ,CAACD,IAAT,CAAc,GAAd,CAAP;AACH;AAED,OAAO,MAAMQ,MAAM,GAAG;AAClBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,aAAa,EAAG,SAASC,OAAO,CAACC,GAAR,CAAYC,gBAAZ,IAAgC,MAAQ,EAD5D;AAELC,IAAAA,MAAM,EAAE;AAFH;AADS,CAAf","sourcesContent":["export function titleCase (str: string) {\n    str = str.split('_').join(' ')\n    const splitStr = str.toLowerCase().split(' ')\n    for (let i = 0; i < splitStr.length; i++) {\n    // You do not need to check if i is larger than splitStr length, as your for does that for you\n    // Assign it back to the array\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1)\n    }\n    // Directly return the joined string\n    return splitStr.join(' ')\n}\n\nexport const config = {\n    headers: {\n        Authorization: `Basic ${(process.env.REACT_APP_APIKEY || 'null')}`,\n        Accept: 'application/vnd.github.antiope-preview+json'\n    }\n}"]},"metadata":{},"sourceType":"module"}